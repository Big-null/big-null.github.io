{"/genAI":{"title":"Intro - Techniques for Graphics Generation","data":{"":"This course contains the technique for LLMs and GenAI usage.","-level#🎮 Level":"Medium to Advance - Secondary School to University level","-target-audients#🎯 Target audients":"Advance computer user\nWant to understand more about prompting and GenAI.","️-goals-of-this-course#⚽️ Goals of this Course":"Using edge-technology AI tools to generate desire graphics video by LLM prompting for text-to-video.\nTo code the desire graphics with the assist of LLM text-to-code.\nAct like a professional prompting engineers."}},"/genAI/lecture-01/lecture-01":{"title":"Lecture 1 - Basic prompts for text & code generations","data":{"":"Lecture 1 - Basic prompts for text & code generations","ask-you-and-llm-a-question#Ask you and LLM a question":"如果我的藍牙耳機壞了，去醫院要看牙科還是耳鼻喉科？\nIf my Bluetooth earphones are broken, should I go \nto the dentist or the ENT (Ear, Nose, Throat) doctor?\nFor human, it seems like a weird question, but how LLM performs?\nReferences: COIG-CQIA: Quality is All You Need for Chinese Instruction Fine-tuning (2024)","gpt-35-response-️#GPT 3.5 response 🤷‍♀️":"If your Bluetooth earphones are broken, you should seek consultation from an ear, nose, and throat (ENT) specialist. Dentists primarily deal with teeth and oral health issues and do not have expertise in ear problems. An ENT specialist is specialized in treating issues related to the ears, nose, and throat, so they can help diagnose and treat problems related to Bluetooth earphones.","gpt-4-o-response-️#GPT 4-o response 🙆‍♂️":"If your Bluetooth earphones are broken, it is a device issue and usually not related to medical conditions. If wearing earphones causes discomfort such as ear pain, ringing in the ears, or hearing loss, you should see an ear, nose, and throat specialist. If prolonged use of earphones causes discomfort in the jaw or teeth, you may consider seeing a dentist.However, if it is just the earphones that are broken, it is recommended to address the device repair issue directly.","coig-cqia-quality-is-all-you-need-for-chinese-instruction-fine-tuning-2024#COIG-CQIA: Quality is All You Need for Chinese Instruction Fine-tuning (2024)":"Interesting findings and data from recent research. A chinese Ruozhiba (弱智吧) (Stupid Forum) dataset becomes the best chinese training prompt set for chineses LLM performances.https://arxiv.org/html/2403.18058v1\nhttps://huggingface.co/datasets/LooksJuicy/ruozhiba","the-adoption-of-chatgpt-2024#The Adoption of ChatGPT (2024)":"References: https://bfi.uchicago.edu/insights/the-adoption-of-chatgpt/","everyone-use-gpt-models#Everyone use GPT models":"We have use a lot LLM products in out daily life (CityU ChatGPT, Poe, OpenAI GPT)\nBut actually, why did the LLM will understand our input prompts?","gpt-architecture-overview#GPT Architecture Overview":"References: GPoeT-2: A GPT-2 Based Poem Generator\nReferences: References: FLUID-GPT Efficient Predictions of Particle Trajectories and Erosion","tokenization-and-learning#Tokenization and Learning":"References: https://www.youtube.com/watch?app=desktop&v=V8qrVleGY5U","demo-llm-visualization#Demo (LLM Visualization)":"URL: https://bbycroft.net/llmLLM learn from our data with mathematics patterns (Deep Learning)\nReferences: https://huyenchip.com/2023/05/02/rlhf.html","available-llm#Available LLM":"https://artificialanalysis.ai/leaderboards/models","available-llm-playground#Available LLM Playground":"Vercel AI\nhttps://sdk.vercel.ai/playground\nGithub Models (Beta)\nhttps://github.com/marketplace/models\nReplicate\nhttps://replicate.com/explore\nAnd more...","prompting-can-be-a-lot#Prompting can be a lot":"Zero-Shot\nFew-Shot\nChain-of-Thought (CoT)\nPrompt Chaining\nSystem prompt\nLoRA finetune\nTemperacture\nModel selection / self-hosting\nAnd more ...\n1. Zero-Shot\nNo samples, just ask the question2. Few-Shot\nProviding few samples for references3. Chain-of-Thought (CoT)\nProviding sets of Q&A for result4. Prompt Chaining\nBase on previous prompting, ask another question","1-zero-shot-prompting#1. Zero-Shot prompting":"No samples, just ask the question directly without any references or background explanations.\nCould you please help me generate a 450-word story about a three-year-old boy\ngoing to school by bus?\nWhy is the sky blue in color?","2-few-shot-prompting#2. Few-Shot prompting":"Provide a few samples for reference and follow the patterns.\napple: fruit\norange: fruit\nzucchini: vegetable\ntomato:\nComplete this list\nSamples:Input\nFollow the pattern and answer the questions\nI go to school by bus // bus\nThe train is arriving // train\nI have to buy a car for me // car\nPlease take me to a mini-bus //\nOutput\nQuestion: Please take me to a mini-bus.\nAnswer: mini-bus.","3-chain-of-thought-cot#3. Chain-of-Thought (CoT)":"Without CoT for certain LLM model\nI baked 15 muffins. I ate 2 muffins and gave 5 muffins to a neighbor. \nMy partner then bought 6 more muffins and ate 2. \nHow many muffins do we now have?\nResult: \nThe total number of muffins now is 21\n# Wrong answer, it should be 12.\nhttps://huggingface.co/docs/transformers/tasks/prompting##reasoning\nNudges a model to produce intermediate reasoning steps thus improving the results on complex reasoning tasks.\nLet's go through this step-by-step:\n1. You start with 15 muffins.\n2. You eat 2 muffins, leaving you with 13 muffins.\n3. You give 5 muffins to your neighbor, leaving you with 8 muffins.\n4. Your partner buys 6 more muffins, bringing the total number of muffins to 14.\n5. Your partner eats 2 muffins, leaving you with 12 muffins.\nTherefore, you now have 12 muffins.\nAKA LLM performs the reasoning task not very well; therefore, you need to provide step-by-step instructions to obtain the correct answers.","4-prompt-chaining#4. Prompt Chaining":"Base on previous prompting, ask another question.Usage:\nChaining for Document QA\nCode changes for various features\nAsking questions for regarding content","prompting-for-code#Prompting for code":"Analysis the following prompt: (What elements are in this prompt?)\nYou are a professional Python developer.\nHelp to write a calculator that computes a string list of student birthday lists\nand outputs the actual age of each student.\nPlease follow the following coding format\nand modify the code starting from the line “// Add codes below”\nand add comments to your output.\nThe code should be under 110 lines\nand no other external pip library used.\nAlso please provide an input string list for the code.\n\"\"\"\ndef calculates_student_ages(student_age_ls: list[string]) -> list[int]:\n  // Add codes below\n\"\"\"","prompting-for-code-1#Prompting for code":"We can split up this prompt into several aspects.\nRole\nActions and desire languages\nAims\nInput\nOutput\nFeedback / comments\nProviding sufficient samples for few-shots promptings.","prompting-for-code-2#Prompting for code":"","1-role#1. Role":"Who is LLM acting as?\n(e.g.Professional C++ coders? Junior developers? Or a python console?)","2-actions-and-desire-languages#2. Actions and desire languages":"What needs to be written, the target, and background?","3-aims#3. Aims":"What will be the final result?","4-input#4. Input":"What input parameters are expected?\n(e.g. input a salary number, a list of student names?)","5-output#5. Output":"From format to output parameters\n(e.g., a JSON format of student list, a total amount number, a CSV file written to OS?)","6-feedback--comments#6. Feedback / comments":"Providing specific requirements for LLM\n(e.g., Adding comments to the code, running the produced code, code within 100 lines, using easily understandable syntax)","7-providing-sufficient-samples-for-few-shots-promptings#7. Providing sufficient samples for few-shots promptings":"(e.g., Providing JSON format samples, or giving a coding structure to fill in the blanks)","coding-prompt-study-case-#Coding prompt study case 💻":"Professional Python developer\ncalculator that computes a string list of student birthday lists\noutputs the actual age of each student.\nstudent_age_ls: list[string]\nlist[int]\nUnder 110 lines and no other external pip library used. Also please provide an input string list for the code.\nPlease follow the following coding format\nRead the following prompt and guess whether it achieves the desired result.","prompts-hk-taxes-calculator-chat-gpt-35#Prompts hk taxes calculator: (Chat-GPT 3.5)":"Act as a professional Python programmer.\nPlease write the code to generate Hong Kong taxes in 2022.\nPlease accept an input of my monthly salary,\nand output the total amount of taxes that I need to pay in that year.\nAfter writing it, execute the code and add comments on proper code sections.","prompt-checklist#Prompt Checklist:":"Languages: Python\nAssist role: Professional\nTarget: Tax cal\nInput: My income\nOutput: Tax to pay\nExtra outcome: Comments\nResult:\ndef calculate_hong_kong_tax(monthly_salary):\n    ## Calculate the annual salary\n    annual_salary = monthly_salary * 12\n    \n    ## Define the tax brackets and corresponding rates\n    tax_brackets = [50000, 100000, 150000, 200000]\n    tax_rates = [0.02, 0.06, 0.10, 0.14, 0.17]\n    \n    ## Initialize tax amount to 0\n    tax_amount = 0\n    \n    ## Calculate tax based on the progressive tax system\n    if annual_salary <= tax_brackets[0]:\n        tax_amount = annual_salary * tax_rates[0]\n    elif annual_salary <= tax_brackets[1]:\n        tax_amount = (tax_brackets[0] * tax_rates[0] +\n                     (annual_salary - tax_brackets[0]) * tax_rates[1])\n    elif annual_salary <= tax_brackets[2]:\n        tax_amount = (tax_brackets[0] * tax_rates[0] +\n                     (tax_brackets[1] - tax_brackets[0]) * tax_rates[1] +\n                     (annual_salary - tax_brackets[1]) * tax_rates[2])\n    elif annual_salary <= tax_brackets[3]:\n        tax_amount = (tax_brackets[0] * tax_rates[0] +\n                     (tax_brackets[1] - tax_brackets[0]) * tax_rates[1] +\n                     (tax_brackets[2] - tax_brackets[1]) * tax_rates[2] +\n                     (annual_salary - tax_brackets[2]) * tax_rates[3])\n    else:\n        tax_amount = (tax_brackets[0] * tax_rates[0] +\n                     (tax_brackets[1] - tax_brackets[0]) * tax_rates[1] +\n                     (tax_brackets[2] - tax_brackets[1]) * tax_rates[2] +\n                     (tax_brackets[3] - tax_brackets[2]) * tax_rates[3] +\n                     (annual_salary - tax_brackets[3]) * tax_rates[4])\n    \n    return tax_amount\n## Example usage:\nmonthly_salary = 30000  ## Input: Monthly salary\ntax_amount = calculate_hong_kong_tax(monthly_salary)\ntax_amount\nPython Result from 30,000 hkd / m\nprint(calculate_hong_kong_tax(30000))\n## 43200.0\n= 43200.0 HKDActual result = 20760.00 HKD\nWhat’s wrong with the prompt?\nCan you spot the missing factors?\nAct as a professional Python programmer.\nPlease write the code to generate Hong Kong taxes in 2022.\nPlease accept an input of my monthly salary,\nand output the total amount of taxes that I need to pay in that year.\nAfter writing it, execute the code\nand add comments on proper code sections.\nWhat factor is missing in the prompt?\nIf you familiar with the taxes system, then you may spot it.Act as a professional Python programmer. Please write the code to generate Hong Kong taxes in 2022 for single person with tax exemption. Please accept an input of my monthly salary, and output the total amount of taxes that I need to pay in that year. After writing it, execute the code and add comments on proper code sections.\nWhat factor is missing?\nMissing Tax exemption calculations\nThe details are not sufficient to generate the proper code.\nYou need to provide full details for your prompts\ndef calculate_hong_kong_tax_with_exemption(monthly_salary):\n    ## Calculate the annual salary\n    annual_salary = monthly_salary * 12\n    \n    ## Subtract the basic allowance for a single person\n    taxable_income = max(0, annual_salary - 132000)\n    \n    ## Define the tax brackets and corresponding rates\n    tax_brackets = [50000, 100000, 150000, 200000]\n    tax_rates = [0.02, 0.06, 0.10, 0.14, 0.17]\n    \n    ## Initialize tax amount to 0\n    tax_amount = 0\n    \n    ## Calculate tax based on the progressive tax system\n    if taxable_income <= tax_brackets[0]:\n        tax_amount = taxable_income * tax_rates[0]\n    elif taxable_income <= tax_brackets[1]:\n        tax_amount = (tax_brackets[0] * tax_rates[0] +\n                     (taxable_income - tax_brackets[0]) * tax_rates[1])\n    elif taxable_income <= tax_brackets[2]:\n        tax_amount = (tax_brackets[0] * tax_rates[0] +\n                     (tax_brackets[1] - tax_brackets[0]) * tax_rates[1] +\n                     (taxable_income - tax_brackets[1]) * tax_rates[2])\n    elif taxable_income <= tax_brackets[3]:\n        tax_amount = (tax_brackets[0] * tax_rates[0] +\n                     (tax_brackets[1] - tax_brackets[0]) * tax_rates[1] +\n                     (tax_brackets[2] - tax_brackets[1]) * tax_rates[2] +\n                     (taxable_income - tax_brackets[2]) * tax_rates[3])\n    else:\n        tax_amount = (tax_brackets[0] * tax_rates[0] +\n                     (tax_brackets[1] - tax_brackets[0]) * tax_rates[1] +\n                     (tax_brackets[2] - tax_brackets[1]) * tax_rates[2] +\n                     (tax_brackets[3] - tax_brackets[2]) * tax_rates[3] +\n                     (taxable_income - tax_brackets[3]) * tax_rates[4])\n    \n    return tax_amount\n## Example usage:\nmonthly_salary = 30000  ## Input: Monthly salary\ntax_amount = calculate_hong_kong_tax_with_exemption(monthly_salary)\ntax_amount","correct-result#Correct Result":"Python Result from 30,000 hkd / m\nprint(calculate_hong_kong_tax(30000))\n## 20760.0\n= 20760.0 HKDActual result = 20760.00 HKD\nNow the code is correct!","system-prompt--instructions#System prompt / Instructions":"Static context description refers to providing fixed information to the LLM. This information can include content and format instructions, database schema information, or any other contextual information that is relevant to the task.\nhttps://learn.microsoft.com/en-us/ai/playbook/technology-guidance/generative-ai/working-with-llms/prompt-engineeringAKA a pre-prompting stage for controlling the user prompt result.","create-system-prompt-bot-in-poe#Create system prompt bot in PoE":"https://poe.com/create_bot\nFor certain university GPT bot that subscribe to Azure AI or other direct OpenAI services, they will provide the options to setup your assist prompt.\nLearn more: https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/chatgpt?tabs=python-new","system-prompt-in-coding-level#System prompt in coding level":"Let's use Python as an example. The system prompt can be pre-defined to support user requirements.\nfrom dotenv import dotenv_values\nimport openai\nopenai.api_key = dotenv_values(\".env\")[\"OPEN_AI_APIKEY\"]\ndef gptGen():\n    result = openai.ChatCompletion.create(\n        model=\"gpt-3.5-turbo\",\n        messages=[\n            { \"role\": \"system\", \"content\": \"You are a technology media content creator KOL.\"},\n            { \"role\": \"user\", \"content\": \"Help to make a instagram post.\"},\n        ]\n    )\n    print(result.choices[0].message.content)","system-prompt-examples#System prompt examples":"Math teacher https://arxiv.org/pdf/2310.13712\n“You are a professional K12 math teacher helping students answer math questions.\nGive students explanations, examples, and analogies \nabout the concept to help them understand.\nYou should guide students in an open-ended way.\nMake the answer as precise and succinct as possible.\nEngaging in a casual conversation\nLet's have a friendly chat about your favorite hobbies.\nEnglish Grammar fixer\nYou are an english assistant that helps to\nadjust grammer mistake and enhance the english paragraph.\nPlease help to fix all the user input english paragraph.","advices-for-prompting#Advices for prompting":"Start with a simple and short prompt, and iterate from there.\nAvoid ambiguous descriptions and instructions.\nFavor instructions that say “what to do” instead of those that say “what not to do”.\nBe specific and descriptive about the task and the desired outcome - its format, length, style, language, etc.\nhttps://huggingface.co/docs/transformers/tasks/prompting##best-practices-of-llm-prompting","recommendation-for-students#Recommendation for students":"(Computer Science Tasks)Instead of attempting to generate complete code, students can employ LLMs to generate code explanations, learn new frameworks and concepts, and suggest possible enhancements to the code. LLMs can also generate sample test cases, and help to clarify any doubt about a potential solution.\nRef: https://arxiv.org/pdf/2402.01687","extra#Extra":"Can I use prompt to write prompt?\nActually, you can.As measured by the interquartile mean across the 24 NLP tasks introduced by Honovich et al. (2022), APE is able to surpass human performance when using the InstructGPT model.\nMore about InstructGPT\nhttps://openai.com/index/instruction-following/","learn-more#Learn more":"Prompt Engineering Guide\nhttps://www.promptingguide.ai/\nLearn Prompting\nhttps://learnprompting.org/docs/introduction\nClaude Docs\nhttps://docs.anthropic.com/en/docs/build-with-claude/define-success\nAzure ai-services\nhttps://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/advanced-prompt-engineering?pivots=programming-language-chat-completions\nOpenai\nhttps://community.openai.com/t/the-art-of-ai-prompt-crafting-a-comprehensive-guide-for-enthusiasts/495144","play-more-free-resources#Play more (Free resources)":"Hugging Face\nhttps://huggingface.co/models\nPoe\nhttps://poe.com/\nReplicate\nhttps://replicate.com/","references#References":"https://concord.org/newsletter/2012-fall/under-the-hood/\nhttps://techcrunch.com/2010/03/11/opengl-4-0-comes-out-to-play/\nhttps://www.researchgate.net/figure/Comparison-of-general-graphics-and-WebGL-graphics-processing-approaches_fig1_320511384\nhttps://civitai.com/images/22874510\nhttps://lumaai.notion.site/FAQ-and-Prompt-Guide-Luma-Dream-Machine-9e4ec319320a49bc832b6708e4ae7c46##93b5b6d2ca304693987c75831a05709f"}},"/genAI/lecture-02/lecture-02":{"title":"Lecture 2 - Advance prompting in computer vision & video","data":{"":"Students through Innovative Techniques for Graphics GenerationLecture 2 - Advance prompting in computer vision & video","generative-adversarial-networks-gan#Generative Adversarial Networks (GAN)":"The fundamental concepts of how your prompts will be translated into images.\nGAN utilizes multiplicative integration that allows flexible region-based modulation, and can thus be seen as a generalization of the successful StyleGAN network.\nhttps://github.com/dorarad/gansformer","what-happens-in-gan#What happens in GAN":"Several key words that you have to know:\nNoise: A math generated random noice images.\nGenerator (CNN) : Generate images by input Noise, and output the images\nConvolutional neural network (CNN)\nDiscriminator (DNN): Try to identify Generator images whether it s similar to the real image.\nDeconvolutional Neural Network (DNN)\nStackGAN: Text to Photo-realistic https://arxiv.org/pdf/1612.03242\nIn the early stages, the generated image will appear as noise","gan-process#GAN process":"In brief, the GAN process reconstructs noise into meaningful images using deep learning methods.e.g.\nConvolutions Networking (CNN and DNN)\nTransformer in vision (VIT)\nFeed forward Dense","forward-to-2022--2023#Forward to 2022 / 2023":"SDXL: Improving Latent Diffusion Models for High-Resolution Image Synthesis\nA latent diffusion model for text-to-image synthesis. Which implemented text-encoder to allow models to generate text related noise for reconstruct prompt related images.\nSD: Stable Diffusion\nSDXL: Stable Diffusion XL\nhttps://arxiv.org/pdf/2307.01952","latent-space#Latent Space":"lower-dimensional space that captures the essential features of the input data.\nIn the QKV structure, the latent space of the visual aspect refers to specific features or characteristics, somewhat similar to the PCA method.You can establish the relationship between text and images through various aspects such as color, location, object, action, and more.","text-to-images#Text to images":"","mmdit#MMDiT":"Conceptual visualization of a block of our modified multimodal diffusion transformer: MMDiTwhich employs your input text for QKV learning in the transformer to understand the relationship features between images and text.","system-implications-of-multi-modal-generation#System Implications of Multi-Modal Generation":"https://arxiv.org/pdf/2312.14385\nYour prompt will be processed with a text-encoder to generate noise images.\nThe noise image will be reconstructed into real images using the SD models multiple times with a Denoising U-Net, which consists of an encoder and decoder network similar to GAN.\nThe Latent Space stores all the text and image features, helping the models generate relevant noise based on input prompts.\nThe SD models are pretrained on numerous labeled images with prompts, enabling them to understand the relationship between text and image noise features.","stable-diffusion-noise-visualization-demo#Stable diffusion noise visualization Demo":"Learn how Stable Diffusion transformsyour text prompt into image\nhttps://poloclub.github.io/diffusion-explainer/\nhttps://arxiv.org/pdf/2305.03509\nHow does Stable Diffusion work?\nhttps://stable-diffusion-art.com/how-stable-diffusion-work/","terms-for-config#Terms for Config":"Understanding these fundamental terms will help you grasp the basics of text-to-media, even though some syntax or tools may become deprecated or unsuitable for your final assignment with selected tools.","generation-configs#Generation configs":"CFG scale (guidance scale):\nMeans Temperacture, higher value means to more precise to your prompt.\n(You can imagine it to \"creativity\" control)\nSampler:\nThe method to generate the noise image. Refer to your selected models.\nSteps (Epoch):\nHow many steps will the generate process to the noise image, please refer to page 10 epoch.\nSeed:\nThe random fixed number for you to obtain the same result.\nCLIP Skip:\nConstative Language-Image Pre-training, used to transfer your prompt into noise vector.\nCLIP Skip provides the possibility to skip several text-encoding layers, to prevent overfitting in SD.\n(AKA: How accurate you want the text model to be)\nPrompt:\nYour input prompt, to generate the desire images / video\nNegative Prompt:\nYour input negative prompt, to prevent the model to generate these unwanted items. (e.g. Bad hands, NSFW, two heads...)\nEmbaddings:\nA preset of Prompt, means a scripted text embaddings for specific prompt text. Can be scripted to Negative prompt or Positive prompt","token-weighting-prompt-emphasis#Token Weighting: Prompt Emphasis":"Increases attention: ( ) , (( )), (token:n.n)\nDecreases attention: [], [[ ]]\nWhich helps to scale the affect power the target prompt text.e.g. boy, (big head: 1.5), sunny day\nThe affect of big head will be scale to 1.5 in this prompt.","lora#lora":"Low-Rank Adaptation (LoRA) is a technique used to add parameters and incorporate unseen fine-tuning data into existing models.LORA Applications:\nAllow an SD model to generate an unseen character (e.g., Eren Yeager).\nAdd various styles to generated models (e.g., hand drawings, cartoon style).\nEnhance models by adding details or making adjustments.","prompting-in-vision--video-aspects#Prompting in vision / video aspects":"Here are 5 points of prompting to vision aspects.\ncamera\nenvironment\nobjective\nanimations\neffects\nWhich can be intergrated into style / medium / color & lighting / composition\n!! Those are just suggested aspects, not a strict rule. !!","1-providing-camera-aspects#1. Providing camera aspects":"Camera starting point\nAngles\nZoom\nLens using\nBrand\nISO\nFrame\nDirector style","1-camera-starting-point#1. Camera starting point":"low to the ground, upward angle, eye level","2-angles#2. Angles":"dynamic angles, wide overhead shot, intimate close-up, 45-degree angle","3-zoom#3. Zoom":"slow zoom-in, tightening focus, subtle emotions","4-lens-using#4. Lens using":"wide-angle lens, expansive landscape, close foreground action","5-brand#5. Brand":"Canon EOS R5, crispness, dynamic range, shadow and light details","6-iso#6. ISO":"low light, ISO 3200, moody, atmospheric, grain, noise","7-frame#7. Frame":"rule of thirds, balanced, visually appealing","8-director-style#8. Director style":"Quentin Tarantino, long takes, steady camera movements, quick cuts, tension, urgency","2-providing-environment-aspects#2. Providing environment aspects":"Place\nWeather\nOther objects\nBuildings\nTime background\nSpecific target","1-place#1. Place":"urban setting, forest, beach, mountaintop","2-weather#2. Weather":"overcast, rainy, sunny, foggy, stormy","3-other-objects#3. Other objects":"vehicles, trees, animals, furniture, props","4-buildings#4. Buildings":"skyscrapers, cottages, warehouses, historic landmarks","5-time-background#5. Time background":"dusk, dawn, midday, midnight, golden hour","6-specific-target#6. Specific target":"protagonist, vehicle, object, landscape, crowd","3-providing-objective-aspects#3. Providing objective aspects":"Your main character\nStyling\nEquipment\nFace express\nHand and legs movement\nEyes sight\nFeelings\nLooking at","1-your-main-character#1. Your main character":"hero, villain, child, elder, stranger, boy","2-styling#2. Styling":"casual, formal, rugged, vintage, futuristic","3-equipment#3. Equipment":"weapon, tool, accessory, gadget, prop","4-face-express#4. Face express":"smile, frown, grimace, surprise, determination","5-hand-and-legs-movement#5. Hand and legs movement":"slow walk, sprint, gesture, fidget, stance","6-eyes-sight#6. Eyes sight":"direct gaze, side glance, downward look, scanning, focused","7-feelings#7. Feelings":"joy, fear, anger, sadness, confusion","8-looking-at#8. Looking at":"another character, distant object, mirror, camera, horizon","31-prompting-a-character#3.1 Prompting a character":"Gender (Boy / Girl / Others)\nClass\nFace\nHead / Hair\nWearings\nHand / Arms/ Legs position\nPose\nStyles\nReferences","1-gender#1. Gender":"boy, girl, non-binary, androgynous","2-class#2. Class":"upper class, middle class, working class, royalty, street","3-face#3. Face":"sharp features, soft features, round face, angular, expressive","4-head--hair#4. Head / Hair":"short hair, long hair, messy, styled, hat, headpiece","5-wearings#5. Wearings":"suit, dress, casual clothes, uniform, accessories","6-hand--arms-legs-position#6. Hand / Arms/ Legs position":"crossed arms, hands in pockets, outstretched arms, standing, sitting, bent knees","7-pose#7. Pose":"confident, relaxed, tense, dynamic, casual","8-styles#8. Styles":"modern, vintage, futuristic, bohemian, minimalist, Japanese comics, Pixar Animation, Kyoto Animation, Lascaux","9-references#9. References":"fashion magazines, movie characters, historical figures, cultural icons, art styles","4-providing-animations-aspects#4. Providing animations aspects":"What is moving in the sence?\nHow the main / sub character moving.\nAny stars / magic / fog / object happening around the camers?\nIs there any transforming happens?","1-what-is-moving-in-the-sence#1. What is moving in the sence?":"vehicle, leaves, water, animals, shadows","2-how-the-main--sub-character-moving#2. How the main / sub character moving.":"walking, running, floating, dancing, crawling","3-any-happening-around-the-camers#3. Any happening around the camers?":"sparkles, mist, fireflies, glowing light, floating debris","4-is-there-any-transforming-happening#4. Is There Any Transforming Happening?":"shape-shifting, morphing, growing, shrinking, merging","5-providing-effects-aspects-for-video#5. Providing effects aspects (For video)":"How the camera behave?\nFollowing the main character?\nFixed camer?\nZoom in to out?\nHigh angle?\nTwo different cameras?","1-how-the-camera-behave#1. How the camera behave":"panning, tracking, tilting, steady, handheld","2-following-the-main-character#2. Following the main character":"tracking shot, over-the-shoulder, side-by-side, circling","3-fixed-camer#3. Fixed camer":"stationary, locked-off, tripod-mounted, stable frame","4-zoom-in-to-out#4. Zoom in to out?":"dolly zoom, gradual zoom out, fast zoom in, reverse zoom","5-high-angle#5. High angle?":"bird's-eye view, top-down shot, overhead, downward angle","6-two-different-cameras#6. Two different cameras?":"dual perspective, split-screen, cross-cutting, alternating angle","images--graph-promptings-#Images / Graph promptings 🛕":"Guess what prompt text is used?\nWhite Moon?\nGirl holding lantern and sword?\nNight street in USA?\nWalking to a huge giant?\nGreen light?\nCamera center?\nSlowly towards?\nAnd more?\nRef: https://civitai.com/images/22874510\nAtmospheric slow-motion video of a desolate cityscape, capturing the girl with a backpack,\nmagic green lantern, and toy sword.\nThe camera pans from a darkened street toward the haunting silhouette of Slenderman on the horizon.\nDim moonlight filters through clouds,\nenhancing a chilling, suspenseful ambiance, evoking fear and wonder.","lets-break-down-the-prompts-#Let’s break down the prompts 🚖":"Camera motion:\nAtmospheric slow-motion video of a desolate cityscape\nCamera Actions:\ncapturing the girl with a backpack, magic green lantern, and toy sword.\nObject features:\ngirl with a backpack, magic green lantern, and toy sword.\nAtmosphere and camera motion describe:\nThe camera pans from a darkened street toward the haunting silhouette of Slenderman on the horizon.\nSetting background and place describe:\nDim moonlight filters through clouds, enhancing a chilling, suspenseful ambiance, evoking fear and wonder.\nJust for the reference to this text-to-video, you may adjust or remove the necessary parts in order to fullfill your requirement.","images--graph-example-#Images / Graph example 🌄":"-movie stills of bladerunner 2049, skyscrapers advertisements on buildings tv, sci-fi film, Dynamic pose, photograph taken by Michael Bay on a CANON EOS C500 MARK II, f/22, Shutter Speed 1/ 1000, ISO 1000, 55mm lens, low lighting, cinematic scene, fx, HDR, epic composition, cinematic photo, hyper - realistic, hyper - detailed, cinematic lighting, particle effects, action photography, hyper realistic, 8k resolution, unreal engine, photorealistic masterpiece, smooth, real photography, full hd, Megapixel, Pro Photo RGB, VR, Good, Massive, Half rear Lighting, Backlight, Incandescent, Optical Fiber, Moody Lighting, Studio Lighting, Soft Lighting, Volumetric, Conte - Jour, Beautiful Lighting, Accent Lighting, Screen, Ray Tracing Global Illumination, Optics, Scattering, Glowing, Shadows, Rough, Shimmering, Ray Tracing Reflections, Lumen Reflections, Screen Space Reflections, Diffraction Grading, Chromatic Aberration, GB Displacement, Scan Lines, Ray Traced, Ray Tracing Ambient Occlusi on, Anti - Aliasing, FKAA, TXAA, RTX, SSAO, Shaders, OpenGL - Shaders, GLSL - Shaders, Post Processing...","lets-break-down-the-prompts--1#Let’s break down the prompts 🌄":"Camera style:\nphotograph taken by Michael Bay on a CANON EOS C500 MARK II, f/22, Shutter Speed 1/ 1000, ISO 1000, 55mm lens, low lighting, cinematic scene, fx, HDR, epic composition, cinematic photo, hyper - realistic, hyper - detailed, cinematic lighting, particle effects, action photography, hyper realistic, 8k resolution, unreal engine, photorealistic masterpiece, smooth, real photography, full hd, Megapixel, Pro Photo RGB, VR, Good, Massive\nAtmosphere:\nmovie stills of bladerunner 2049, skyscrapers advertisements on buildings\nLight describe:\nBeautiful Lighting, Accent Lighting, Screen, Ray Tracing Global Illumination, Optics, Scattering, Glowing, Shadows, Rough, Shimmering, Ray Tracing Reflections, Lumen Reflections, Screen Space Reflections, Diffraction Grading, Chromatic Aberration, GB Displacement, Scan Lines, Ray Traced, Ray Tracing Ambient Occlusi\nProcess describe:\nAnti - Aliasing, FKAA, TXAA, RTX, SSAO, Shaders, OpenGL - Shaders, GLSL - Shaders, Post Processing, Post - Production, Cell Shading, Tone Mapping, CGI, VFX, SFX\nThese text-to-media structure is just a recommended format, does not mean you have to strictly follow these rules and method. Sometime, let the models create their own style are also a good references.\nTry to view more creations from other to see how to construct the wordings.","extra#Extra":"","gpt-to-video--image-prompt#GPT to video / image prompt":"Q. Can I tell GPT to generate video / images prompt?\nA. Yes, you can turn a systme prompt to tell the GPT for it.\nSDPromptGenerator\nhttps://github.com/techvishnu/SDPromptGenerator","clip-interrogator#CLIP Interrogator":"Q. Can I reverse the prompt text form images?\nA. Yes, the technology of CLIP Interrogator can reverse the image-to-prompt.\nDemo:\nhttps://huggingface.co/spaces/pharmapsychotic/CLIP-Interrogator\nInteresting paper (Image Captioners Sometimes Tell More Than Images They See)\nhttps://arxiv.org/pdf/2305.02932","stable-diffusion-web-ui#Stable Diffusion web UI":"Q. Can I self-host the Stable Diffusion models by my own?\nA. Yes, you can create / modify / host your own text-to-images / text-to-video with proper software.\nAUTOMATIC1111 SD webui\nhttps://github.com/AUTOMATIC1111/stable-diffusion-webui\nComfyUI\nhttps://github.com/comfyanonymous/ComfyUI","try-more-applications#Try more applications":"viggle\nhttps://viggle.ai/home\ntripo3d\nhttps://www.tripo3d.ai/\nvidnoz\nhttps://www.vidnoz.com/\nleonardo\nhttps://app.leonardo.ai/"}},"/":{"title":"Introduction","data":{"":"Welcome to Big-null!","-references#📚 References":"All the public workshops, documents and code will be archive in here for better reading usage.","-repo#🏦 Repo":"Please checkout here for all public data.\nhttps://github.com/Big-null","-license#🚗 License":"We are welcome for using all materials for education, profit or non profit works. But please make sure to state the source from here:\nCopyright © 2025 Big Null. All rights reserved.\nhttps://github.com/Big-null"}},"/lifeIsPossible/Lecture/lecture-02/lecture-02-chinese":{"title":"講課 2 - Introduce to HTML | Life is Possible - 生命教育 手機程式工作坊","data":{"":"講課 02 - 基本的HTML架構","選單#選單":"HTML的定義和作用\nHTML的概念\n基本的HTML架構\n閱讀標籤和文件","什麼是html為什麼要使用它#什麼是HTML，為什麼要使用它?":"","如何建立網站#如何建立網站？":"","python-c-ruby-java#Python? C++? Ruby? Java?":"","html#HTML":"","html-hyper-text-markup-language#HTML (Hyper Text Markup Language)":"(超文字標記語言)簡而言之：\nHTML是創建網頁的標準標記語言\nHTML描述了網頁的結構\nHTML由一系列元素組成\nHTML元素告訴瀏覽器如何顯示內容\nHTML元素標記內容的不同部分，例如“這是標題”、“這是段落”、“這是鏈接”等等。","html的優點#HTML的優點":"✨ 容易學習\n💻 每個瀏覽器都支持HTML語言（跨平台）\n⚡ HTML是輕量級(Lightweight)的，加載速度快\n等等 ...","基本結構#基本結構":"index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Life is Possible ar</title>\n</head>\n<body>\n    <!-- All stuff here -->\n    <h1> Hello mate </h1>\n</body>\n</html>","簡單結構#簡單結構":"index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n      <!-- All Style / CSS / Headerstuff here -->\n      <!-- To define meta tags, css file, title is here -->\n  </head>\n  <body>\n      <!-- All HTML / JS stuff here -->\n      <!-- To define visible stuff and JS script here -->\n  </body>\n</html>","-基本標籤#🏷 基本標籤":"這些標籤是很重要的基礎知識","html-html#<html> </html>":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html\n<html> 元素代表HTML文檔的根（頂級元素），因此也被稱為根元素。所有其他元素都必須是此元素的子孫元素。\n也就是說，告訴電腦這個文件是一個HTML文件。","head-head#<head> </head>":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head\n<head>元素包含有關文檔的機器可讀信息（元數據），例如其標題，腳本和樣式表。\n也就是說，告訴電腦這些項目是標題，腳本和樣式表。","body-body#<body> </body>":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body\n<body> HTML 元素表示 HTML 文檔的內容。一個文檔中只能有一個 <body> 元素。\n也就是說，告訴電腦這些在這些標籤之間的部分是 HTML 文檔的內容。index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Life is Possible ar</title>\n</head>\n<body>\n    <!-- All stuff here -->\n    <h1> Hello mate </h1>\n</body>\n</html>","成品#成品":"","注意事項#注意事項":"有些標籤是成對出現的，但有些標籤不是。\n例如：（成對出現：<body>...</body>，單獨出現：<meta>）\n請查閱文件和教程以檢查其使用方法。","休息#休息":"","基本標籤#基本標籤":"","-body-標籤-與容器相關#🏷 body 標籤 (與容器相關)":"","div--基本框盒標籤#<div> : 基本框盒標籤":"","header--儲存網頁頁首內容#<header> : 儲存網頁頁首內容":"","section--儲存各個區域的內容#<section> : 儲存各個區域的內容":"","footer--儲存網頁頁尾內容#<footer> : 儲存網頁頁尾內容":"","規則-1#規則 1":"","通常-html-標籤是成對出現的#通常 HTML 標籤是成對出現的":"開始標籤    結束標籤\n    <div>      </div>\n<div>some stuff inside the box</div>\n<header>some stuff inside the box</header>\n<footer>some stuff inside the box</footer>","規則-2#規則 2":"","標籤可以互相嵌套只要語法正確即可#標籤可以互相嵌套，只要語法正確即可":"<div>\n  <div>hello</div>\n  <div>\n    <div>hello</div>\n    <div>yolo</div>\n  </div>\n</div>\nRef: https://www.interviewbit.com/blog/difference-between-html-and-css/\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hi all</title>\n</head>\n<body>\n    <header>Hello all</header>\n    <div>\n        <h1>Hello</h1>\n    </div>\n    <footer>Bye</footer>\n</body>\n</html>","主要常用的標籤#主要常用的標籤":"<h1>–<h6>: 標題文字標籤，用於包含文字。\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements\n<p>: 段落元素。\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/p\n<span>: 通用的內嵌容器。\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/span\n<br>:  斷行元素。\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/br\n<b>: 強調元素。\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/b\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hi all</title>\n</head>\n<body>\n    <h1>Hello</h1>\n    <h2>Hello 2</h2>\n    <h3>Hello 3</h3>\n    <br>\n    <p>Yoooo</p>\n    <span>Apple</span>\n    <b>I am strong</b>\n</body>\n</html>","主要常用的標籤-1#主要常用的標籤":"<img>: 圖片嵌入元素。\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\n<hr>: 分隔線 (水平線) 元素。\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr\n<a>: 錨點元素。\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hi all</title>\n</head>\n<body>\n  <a href=\"https://youtu.be/dQw4w9WgXcQ\"> Funny youtube video </a>\n  <hr>\n  <img \n    src=\"/media/orange.jpg\"\n    alt=\"I am a orange\"\n  >\n</body>\n</html>","主要常用的標籤-2#主要常用的標籤":"<ul>, <ol>, <li>: 無序清單、有序清單和清單項目。\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/li","主要常用的標籤-功能性#主要常用的標籤 (功能性)":"稍後會在 JS 課程中進一步介紹。\n<button>\n<form>\n<input>\n<option>","主要常用的標籤-3#主要常用的標籤":"查看此處以了解我們可以在 HTML 中使用什麼：\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Reference######## ‼ 記住：搜尋 Google 和文件是編碼的關鍵。 ‼","休息時間#休息時間":"","lab-01---嘗試複製網站#Lab 01 - 嘗試複製網站":"嘗試使用 html 代碼編寫相關圖像。註： 😀 是一個表情符號。","lab-02---自我介紹#Lab 02 - 自我介紹":"使用以下模板，嘗試用 HTML 頁面介紹自己。\n(中英文都可以)\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Peter homepages</title>\n</head>\n<body>\n  <!-- Your content -->\n</body>\n</html>","lab-02---自我介紹續#Lab 02 - 自我介紹（續）":"你的網頁應包含Must以下內容：\n📃 名字和簡短介紹\n📚 分享4個喜愛的事物，3個朋友的名字等等\n✏ 適當的佈局和UI設計\n你也可以包含Should以下內容：\n✨ 其他你能想到的內容...","lab-02---自我介紹續-1#Lab 02 - 自我介紹（續）":"完成後，你會有30-60秒的時間向其他人展示你的網站。將site.html重新命名為 <your-name>_l01_lab02.html，例如 peter_l01_lab02.html 。你可以將網站提交到以下google表格中：\n（連結將在課堂時間分享）","結束#結束":"","額外閱讀-english#額外閱讀 (English)":"w3school HTML教程\nhttps://www.w3schools.com/html/\n如何為實際網站結構化HTML\nhttps://zellwk.com/blog/html-structure/"}},"/lifeIsPossible/Lecture/lecture-02/lecture-02":{"title":"Lecture 2 - Introduce to HTML | Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture 02 - Introduce to HTML","menu#Menu":"What and Why of HTML\nConcepts of HTML\nBasics HTML structure\nReading Tags and Docs","what-is-html-and-why#What is HTML and Why":"","how-to-build-those-website#How to build those website?":"","python-c-ruby-java#Python? C++? Ruby? Java?":"","html#HTML":"","html-hyper-text-markup-language#HTML (Hyper Text Markup Language)":"In brief:\nHTML is the standard markup language for creating Web pages\nHTML describes the structure of a Web page\nHTML consists of a series of elements\nHTML elements tell the browser how to display the content\nHTML elements label pieces of content such as \"this is a heading\", \"this is a paragraph\", \"this is a link\", etc.","advantages-of-html#Advantages of HTML":"✨ Easy to learn.\n💻 Every browser supports HTML Language. (Cross platform)\n⚡ HTML is light weighted and fast to load.\nAnd more ...","basic-structure#Basic structure":"index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Life is Possible ar</title>\n</head>\n<body>\n    <!-- All stuff here -->\n    <h1> Hello mate </h1>\n</body>\n</html>","minified-structure#Minified structure":"index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n      <!-- All Style / CSS / Headerstuff here -->\n      <!-- To define meta tags, css file, title is here -->\n  </head>\n  <body>\n      <!-- All HTML / JS stuff here -->\n      <!-- To define visible stuff and JS script here -->\n  </body>\n</html>","-fundamentals-tags#🏷 Fundamentals Tags":"Those tags are important to fimilar with","html-html#<html> </html>":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html\nThe <html> HTML element represents the root (top-level element) of an HTML document, so it is also referred to as the root element. All other elements must be descendants of this element.\nAKA, to tell the computer that this file is a HTML file.","head-head#<head> </head>":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head\nThe <head> HTML element contains machine-readable information (metadata) about the document, like its title, scripts, and style sheets.\nAKA, to tell the computer those items are title, scripts, and style sheets.","body-body#<body> </body>":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body\nThe <body> HTML element represents the content of an HTML document. There can be only one <body> element in a document.\nAKA, to tell the computer those represents the content are between this tag.","combinded-with#Combinded with":"index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Life is Possible ar</title>\n</head>\n<body>\n    <!-- All stuff here -->\n    <h1> Hello mate </h1>\n</body>\n</html>","output#Output":"","notices#Notices":"Several tags are in pairs, but some tags are not.\ne.g. (Pair: <body>...</body>, Single <meta>)\nSee the documents and tutorials to check the usage.","break#Break":"","basic-tags-you-need-to-know#Basic Tags you need to know":"","-basic-tags-in-body-container-related#🏷 Basic Tags in body (Container related)":"","div--basic-box-tag#<div> : Basic Box tag":"","header--store-the-web-header-content#<header> : Store the web header content":"","section--store-content-regarding-each-sections#<section> : Store content regarding each sections":"","footer--store-the-web-footer-content#<footer> : Store the web footer content":"","rules-1#Rules 1":"","usually-html-tags-are-in-paris#Usually html tags are in paris":"Opening      End\n    <div>      </div>\n<div>some stuff inside the box</div>\n<header>some stuff inside the box</header>\n<footer>some stuff inside the box</footer>","rules-2#Rules 2":"","tags-can-nested-together-as-long-as-your-syntax-is-correct#Tags can nested together, as long as your syntax is correct":"<div>\n  <div>hello</div>\n  <div>\n    <div>hello</div>\n    <div>yolo</div>\n  </div>\n</div>\nRef: https://www.interviewbit.com/blog/difference-between-html-and-css/\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hi all</title>\n</head>\n<body>\n    <header>Hello all</header>\n    <div>\n        <h1>Hello</h1>\n    </div>\n    <footer>Bye</footer>\n</body>\n</html>","more-common-tags-in-body#More common tags in body":"<h1>–<h6>: Header text tags to contain string.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements\n<p>: The Paragraph element.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/p\n<span>: Generic inline container.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/span\n<br>: Line Break element.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/br\n<b>: The Bring Attention To element.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/b\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hi all</title>\n</head>\n<body>\n    <h1>Hello</h1>\n    <h2>Hello 2</h2>\n    <h3>Hello 3</h3>\n    <br>\n    <p>Yoooo</p>\n    <span>Apple</span>\n    <b>I am strong</b>\n</body>\n</html>","more-common-tags-in-body-1#More common tags in body":"<img>: The Image Embed element.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\n<hr>: The Thematic Break (Horizontal Rule) element.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr\n<a>: The Anchor element.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/a\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hi all</title>\n</head>\n<body>\n  <a href=\"https://youtu.be/dQw4w9WgXcQ\"> Funny youtube video </a>\n  <hr>\n  <img \n    src=\"/media/orange.jpg\"\n    alt=\"I am a orange\"\n  >\n</body>\n</html>","more-common-tags-in-body-2#More common tags in body":"<ul>, <ol>, <li>: unorder list, order list and list item\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/li","more-common-tags-in-body-functional#More common tags in body (Functional)":"Will be cover more in later JS lessons\n<button>\n<form>\n<input>\n<option>","more-common-tags-in-body-3#More common tags in body":"See here to know what we can use in HTML:\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Reference######## ‼ Remember: Searching google and documents is the key to code. ‼","break-and-play-time#Break and play time":"","lab-01---try-clone-me#Lab 01 - Try clone me":"Try to code the regarding images with html code.Notes: The 😀 is an emoji.","lab-02---introduce-yourself#Lab 02 - Introduce yourself":"With the following template, try to intruduce yourself with an html pages.\n(Either English or Chinese is ok)\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Peter homepages</title>\n</head>\n<body>\n  <!-- Your content -->\n</body>\n</html>","lab-02---introduce-yourself-cont#Lab 02 - Introduce yourself (Cont)":"You SHOULD contain these items in your intro:\n📃 Name and a short intro to describe yourself\n📚 4 Favourite stuff to share, 3 friend name and more...\n✏ Proper layout and UI to design the site\nYou MAY contain these items in your intro:\n✨ More you can think of ...","lab-02---introduce-yourself-cont-1#Lab 02 - Introduce yourself (Cont)":"After the works, you will have a 30 - 60 seconds time to present the website to others. Rename the site.html to <your-name>_l01_lab02.html e.g. peter_l01_lab02.htmlYou may submit the site to google form in here:\n(Link will be share in lecture time)","end#End":"","extra-readings#Extra Readings":"w3school HTML Tutorial\nhttps://www.w3schools.com/html/\nHow to structure HTML for an actual website\nhttps://zellwk.com/blog/html-structure/"}},"/lifeIsPossible/Lecture/lecture-03/lecture-03-chinese":{"title":"Lecture 3 - Introduce to HTML | Life is Possible - 生命教育 手機程式工作坊","data":{"":"講課 03 - CSS和Bulma入門","選單#選單":"CSS是什麼和為什麼要用CSS\nCSS的概念\nHTML中的class和id概念\n基本CSS結構\n讀取CSS樣式和文件\nBulma的基本使用","什麼是css和為什麼要用#什麼是CSS和為什麼要用":"在您之前的Lab 02 HTML任務中，網站看起來漂亮嗎？","這些網站是如何呈現的#這些網站是如何呈現的？":"演示：\nhttps://81-web.com/\nhttps://1guu.jp/","css層疊樣式表#CSS（層疊樣式表）":"","也稱為css可用於非常基本的文檔文本樣式#也稱為：CSS可用於非常基本的文檔文本樣式":"","html和css的不同#HTML和CSS的不同？":"","html#HTML":"所有內容和文本例如：人體骨骼和肌肉 💀","css#CSS":"所有樣式和UI的外觀例如：人體皮膚和頭髮 🎅","如何快速展示內部方法#如何快速展示（內部方法）":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <style>\n        ##apple {\n            color: red;\n            text-align: center;\n        }\n    </style>\n</head>\n<body>\n    <h1 id=\"apple\">I am an apple.</h1>\n</body>\n</html>","如何快速展示外部方法#如何快速展示（外部方法）":"index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <!-- Skipped -->\n    <link rel=\"stylesheet\" href=\"index.css\">\n</head>\n<body>\n    <h1 class=\"apple\">I am an apple.</h1>\n</body>\n</html>\nindex.css\n.apple {\n    color: red;\n    text-align: center;\n}","快速示範如何內嵌方法#快速示範如何（內嵌方法）":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    \n</head>\n<body>\n    <h1 style=\"color: red; text-align: center;\">\n        I am an apple.\n    </h1>\n</body>\n</html>","我們偏好哪種-css-方法#我們偏好哪種 CSS 方法？":"","內部-css#內部 CSS":"半推薦 👍","外部-css#外部 CSS":"最推薦 👍👍","行內-css#行內 CSS":"不推薦 🤚","練習課程5-分鐘#練習課程（5 分鐘）":"試著在一個文件夾中創建一個 index.html 和 index.css，然後將這些內容複製到每個文件夾中。index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta \n      name=\"viewport\" \n      content=\"width=device-width, initial-scale=1.0\"\n    >\n    <link rel=\"stylesheet\" href=\"index.css\">\n</head>\n<body>\n    <h1 class=\"school\">Hello schools.</h1>\n</body>\n</html>\nindex.css\n.school {\n    color: ##FF00FF;\n    text-align: right;\n}","短暫休息#短暫休息":"","介紹-id-和-class#介紹 id 和 class":"像上面的例子，您可能會看到以下代碼：\n<h1 class=\"school\">Hello schools.</h1>\n<h1 id=\"apple\">I am an apple.</h1>\n那麼，什麼是 id 和 class？","id-和-class#id 和 class":"在一般的介紹中，它說：\nid 屬性為 HTML 元素指定唯一的 id。id 屬性的值在 HTML 文檔中必須是唯一的。\nclass 屬性通常用於指向樣式表中的 class 名稱。它也可以被 JavaScript 用來訪問和操作具有特定 class 名稱的元素。","id-和-class-1#id 和 class":"即：我們使用 id 和 class 來指向我們想要對其應用某些內容的元素。\n（例如：應用一些樣式、事件、控制相關元素等等）","id-和-class-的不同之處#id 和 class 的不同之處":"id 是唯一的標籤，它只能引用一個元素。\nclass 可以同時應用於許多元素。\n正確 ⭕\n<h1 id=\"apple\">I am an apple.</h1>\n<h3 class=\"school\">Hello schools 3.</h3>\n<h2 class=\"school\">Hello schools 2.</h2>\n錯誤 ❌（不能重複使用相同的 id）\n<h1 id=\"apple\">I am an apple.</h1>\n<h1 id=\"apple\">Hello schools 1.</h1>\n<h3 class=\"school\">Hello schools 3.</h3>\n<h2 class=\"school\">Hello schools 2.</h2>","更多正確例子#更多正確例子":"正確 ⭕\n<h1 id=\"apple\">I am an apple.</h1>\n<h3 id=\"orange\">Hello schools 3.</h3>\n<h2 class=\"school\">Hello schools 2.</h2>\n正確 ⭕\n<h1 id=\"apple\" class=\"school\">I am an apple.</h1>\n<h3 id=\"orange\">Hello schools 3.</h3>\n<h2 class=\"school boxes\">Hello schools 2.</h2>\nclass 可以同時套用到多個元素上，而 id 僅能套用到一個元素。\n正確  ⭕\n<h2 class=\"school\">Hello schools 2.</h2>\n<h2 class=\"boxes\">Hello schools 2.</h2>\n<h2 class=\"school boxes\">Hello tom</h2>\n在上面的範例中，\"Hello tom\" 元素可以使用 school 和 boxes 兩個 class 的樣式。錯誤 ❌ （id 不可以重複使用）\n<h1 id=\"apple orange\">I am an apple.</h1>","休息一下#休息一下":"","如何使用-id-和-class#如何使用 id 和 class？":"","id#id":"要連結一個 id，我們使用 ## 來表示以下的標籤是一個 id 的參考。index.css\n##apple {\n    color: red;\n    text-align: center;\n}\n##orange {\n    color: yellow;\n}\nindex.html\n<h1 id=\"apple\">I am an apple.</h1>\n<h1 id=\"orange\">I am an orange?</h1>","class#class":"要連結一個 class，我們在 CSS 中使用 . 來表示接下來的標籤是一個 class 的引用。index.css\n.apple-class {\n    color: red;\n    text-align: center;\n}\n.box {\n    font-size: 30px\n}\nindex.html\n<div class=\"box\">\n  I am an apple.\n</div>\n<h1 class=\"apple-class box\">\n  I am an apple also\n</h1>","css-檔案#CSS 檔案":"所有的 CSS 樣式都會被放在一起。\n.apple-class {\n    color: red;\n    text-align: center;\n}\n.box {\n    font-size: 30px\n}\n##apple {\n    color: red;\n    text-align: center;\n}\n##orange {\n    color: yellow;\n}","css-可以做什麼#CSS 可以做什麼？":"📚 顏色樣式\n🖼 佈局樣式\n✒ 文字樣式\n🎠 動畫\n🧰 大小和高度\n📅 顯示方式\n📊 還有更多...","css-無法做什麼#CSS 無法做什麼？":"邏輯控制\n處理互動事件\n控制當某些事情發生時的顯示方式\n這些是 JavaScript 的功能，我們將在下一課學習 JavaScript。","css-使用#CSS 使用":"所有參考在：\nhttps://www.w3schools.com/css/default.asp\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/accent-color","短暫休息-1#短暫休息":"","css-使用注意事項#CSS 使用注意事項":"有些標籤可能不常用、已廢棄或是相對較新，因此我們無法在短時間內介紹所有標籤。\n根據需求，您應該根據自己的需求進行谷歌搜索/查找文檔。即使是高級程序員也無法記住所有的語法和代碼。不要試圖記住所有的語法，而是概念上理解 CSS 可以應用的格式。","css-使用-1#CSS 使用":"常用文本相關\n.some-class {\n  color: blue;\n  text-align: center;\n  font-size: 100px;\n  font-weight: 600;\n  font-family: 'Courier New', Courier, monospace;\n}\n更多:\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/font\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/text-align","css-使用-2#CSS 使用":"通用的背景顏色和其他樣式\n.some-class {\n  background-color: ##123F02;\n  text-shadow: 2px 2px;\n  box-shadow: 10px 10px;\n}","css-使用-3#CSS 使用":"","通用佈局實用程序#通用佈局實用程序":"margin (外邊框): https://www.w3schools.com/css/css_margin.asp\npadding (内邊框): https://www.w3schools.com/css/css_padding.asp\nHeight, Width (高度、寬度): https://www.w3schools.com/css/css_dimension.asp\nborder (邊框): https://www.w3schools.com/css/css_border.asp\nfloat (位置): https://www.w3schools.com/css/css_float.asp","css-使用-4#CSS 使用":"","通用佈局實用程序更多#通用佈局實用程序(更多)":"position (位置) : https://www.w3schools.com/css/css_positioning.asp\ndisplay (現出) : https://www.w3schools.com/css/css_display_visibility.asp\nz-index (層): https://www.w3schools.com/css/css_z-index.asp","css-使用-5#CSS 使用":"","通用佈局實用程序更多-1#通用佈局實用程序(更多)":"display: flex\njustify-content: flex-start | flex-end | center | space-between | space-around;\nalign-items: flex-start | flex-end | center | baseline | stretch;\nhttps://www.casper.tw/css/2017/07/21/css-flex/","display-flex-演示#display flex 演示":"https://grid.malven.co/","display-flex-練習遊戲#display flex 練習遊戲":"https://flexboxfroggy.com/","休息一下-1#休息一下":"","介紹-bulma#介紹 Bulma":"Bulma 是一個免費、開源的框架，提供了現成的前端元件，可以輕鬆地組合來建構響應式網頁介面。https://bulma.io/documentation/overview/start/","為什麼要用-bulma#為什麼要用 Bulma":"提供良好的元件可供使用\n有好看的介面\n容易建構響應式網站 (responsive website)\n寫少量的 CSS","在-html-中安裝-bulma#在 HTML 中安裝 Bulma":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Hello Bulma!</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css\">\n  </head>\n  <body>\n  <section class=\"section\">\n    <div class=\"container\">\n      <h1 class=\"title\">\n        Hello World\n      </h1>\n      <p class=\"subtitle\">\n        My first website with <strong>Bulma</strong>!\n      </p>\n    </div>\n  </section>\n  </body>\n</html>","columns-列#Columns (列)":"https://bulma.io/documentation/columns/basics/","elements-元素#Elements (元素)":"Button (按鈕): https://bulma.io/documentation/elements/button/\nBox (盒子): https://bulma.io/documentation/elements/box/\nTitle (標題): https://bulma.io/documentation/elements/title/\n更多: https://bulma.io/documentation/elements/","components-部件#Components (部件)":"Navbar (導航欄): https://bulma.io/documentation/components/navbar/\nCard (卡片): https://bulma.io/documentation/components/card/\n更多: https://bulma.io/documentation/components/","lab-01---裝飾自我介紹頁面#Lab 01 - 裝飾自我介紹頁面":"還記得之前在 lecture 02 的 自我介紹 頁面嗎？\n現在，讓我們使用更多的 CSS 和 bulma 來美化它 ！","lab-01---裝飾自我介紹頁面-1#Lab 01 - 裝飾自我介紹頁面":"以下是您的頁面應該添加的一些內容：\n👩‍🎨 文本顏色 和 背景顏色 (Text Color and background color)\n🎴 字體大小，文本對齊 (Font size, text align)\n🎛 邊框 (Border)\n📣 至少兩個來自 bulma 的元素 (bulma)\n以下是您可以添加到您的頁面的一些內容：\n📦 更多的 bulma 組件和佈局\n🛒 任何您能想到的更多內容...","結束#結束":""}},"/lifeIsPossible/Lecture/lecture-03/lecture-03":{"title":"Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture 03 - Introduce to CSS and bulma","menu#Menu":"What and Why of CSS\nConcepts of CSS\nConcepts of classe, and id in HTML\nBasics CSS structure\nReading CSS style and documents\nBasic use of bulma","what-is-css-and-why#What is CSS and Why":"Does the website looks beautiful at your previous Lab 02 HTML task?","how-does-these-website-looks#How does these website looks?":"Demo:\nhttps://81-web.com/\nhttps://1guu.jp/","css-cascading-style-sheets#CSS (Cascading Style Sheets)":"","aka-css-can-be-used-for-very-basic-document-text-styling#AKA: CSS can be used for very basic document text styling":"","what-the-different-of-html-and-css#What the different of HTML and CSS?":"","html#HTML":"All you contents and texte.g Humans body bones and muscles 💀","css#CSS":"All you style and hows the UI looke.g Humans Skin and hair 🎅","quick-demo-of-how-internal-method#Quick demo of how (Internal method)":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <style>\n        ##apple {\n            color: red;\n            text-align: center;\n        }\n    </style>\n</head>\n<body>\n    <h1 id=\"apple\">I am an apple.</h1>\n</body>\n</html>","quick-demo-of-how-external-method#Quick demo of how (External method)":"index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <!-- Skipped -->\n    <link rel=\"stylesheet\" href=\"index.css\">\n</head>\n<body>\n    <h1 class=\"apple\">I am an apple.</h1>\n</body>\n</html>\nindex.css\n.apple {\n    color: red;\n    text-align: center;\n}","quick-demo-of-how-inline-method#Quick demo of how (Inline method)":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    \n</head>\n<body>\n    <h1 style=\"color: red; text-align: center;\">\n        I am an apple.\n    </h1>\n</body>\n</html>","which-css-method-we-prefered#Which CSS method we prefered?":"","internal-css#Internal CSS":"Semi-recommended 👍","external-css#External CSS":"Most recommended 👍👍","inline-css#Inline CSS":"Lessly-recommended 🤚","class-exercise-5-mins#Class exercise (5 mins)":"Try to create a index.html and index.css inside a folder.\nthen copy these stuff inside each folder.index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta \n      name=\"viewport\" \n      content=\"width=device-width, initial-scale=1.0\"\n    >\n    <link rel=\"stylesheet\" href=\"index.css\">\n</head>\n<body>\n    <h1 class=\"school\">Hello schools.</h1>\n</body>\n</html>\nindex.css\n.school {\n    color: ##FF00FF;\n    text-align: right;\n}","short-break#Short Break":"","introduce-to-id-and-class#Introduce to id and class":"As the top examples, you may have seen the following code:\n<h1 class=\"school\">Hello schools.</h1>\n<h1 id=\"apple\">I am an apple.</h1>\nSo, what is the id and class?","id-and-class#id and class":"In general introductions, it said:\nThe id attribute specifies a unique id for an HTML element. The value of the id attribute must be unique within the HTML document.\nThe class attribute is often used to point to a class name in a style sheet. It can also be used by a JavaScript to access and manipulate elements with the specific class name.","id-and-class-1#id and class":"","aka-we-use-id-and-class-to-point-to-the-elements-that-we-want-to-apply-something-in-that-elements#AKA: We use id and class to POINT to the elements that we want to apply something in that elements.":"(e.g. Apply some style, events, control the regarding elements ...)","different-of-id-and-class#Different of id and class":"id is a unique tags, it can only references to ONE element only.\nclass can be apply to a lot of elements at the same time.\nCorrect ⭕\n<h1 id=\"apple\">I am an apple.</h1>\n<h3 class=\"school\">Hello schools 3.</h3>\n<h2 class=\"school\">Hello schools 2.</h2>\nWrong ❌ (same id can not be reuse again)\n<h1 id=\"apple\">I am an apple.</h1>\n<h1 id=\"apple\">Hello schools 1.</h1>\n<h3 class=\"school\">Hello schools 3.</h3>\n<h2 class=\"school\">Hello schools 2.</h2>","more-correct-samples#More correct samples":"Correct ⭕\n<h1 id=\"apple\">I am an apple.</h1>\n<h3 id=\"orange\">Hello schools 3.</h3>\n<h2 class=\"school\">Hello schools 2.</h2>\nCorrect ⭕\n<h1 id=\"apple\" class=\"school\">I am an apple.</h1>\n<h3 id=\"orange\">Hello schools 3.</h3>\n<h2 class=\"school boxes\">Hello schools 2.</h2>\nclass can multi apply to various elements, id can not.\nCorrect ⭕\n<h2 class=\"school\">Hello schools 2.</h2>\n<h2 class=\"boxes\">Hello schools 2.</h2>\n<h2 class=\"school boxes\">Hello tom</h2>\nIn this top example, the Hello tom elements can use the css of both class school and boxesWrong ❌ (id can not be apply more than one time)\n<h1 id=\"apple orange\">I am an apple.</h1>","short-break-1#Short Break":"","how-to-apply-id-and-class#How to apply id and class?":"","id#id":"To link a id, we use ## to represent the following tag is a id references.index.css\n##apple {\n    color: red;\n    text-align: center;\n}\n##orange {\n    color: yellow;\n}\nindex.html\n<h1 id=\"apple\">I am an apple.</h1>\n<h1 id=\"orange\">I am an orange?</h1>","class#class":"To link a class, we use . in css to represent the following tag is a class references.index.css\n.apple-class {\n    color: red;\n    text-align: center;\n}\n.box {\n    font-size: 30px\n}\nindex.html\n<div class=\"box\">\n  I am an apple.\n</div>\n<h1 class=\"apple-class box\">\n  I am an apple also\n</h1>","css-file#CSS file":"All the css style will be put together.\n.apple-class {\n    color: red;\n    text-align: center;\n}\n.box {\n    font-size: 30px\n}\n##apple {\n    color: red;\n    text-align: center;\n}\n##orange {\n    color: yellow;\n}","what-can-we-do-with-css#What can we do with css?":"Color style\nLayout style\nText style\nAnimations\nSize and height\nDisplay method\nAnd more ...","what-css-cant-do#What css can't do?":"Logics control\nHandling event for interactions\nControl display when something happens\nThese are the functions of javascript to do, we will learn javascript in the next lesson.","css-utilis#CSS utilis":"All references in:\nhttps://www.w3schools.com/css/default.asp\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/accent-color","break#Break":"","css-utilis-notices#CSS utilis Notices":"Some tags are not very common / deprecated / relatively new, hence we can't introduce all tags in a short period.\nDepends on the needed, you should google it / search the docs as your requirement. Even a senior programmer can't memorized all syntax and codes. Don't try to memorized all syntax, but the concepts that which css format can be apply.","css-utilis-1#CSS utilis":"","common-text-related#Common Text related":".some-class {\n  color: blue;\n  text-align: center;\n  font-size: 100px;\n  font-weight: 600;\n  font-family: 'Courier New', Courier, monospace;\n}\nMore:\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/font\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/text-align","css-utilis-2#CSS utilis":"","common-background-color-and-others#Common background color and others":".some-class {\n  background-color: ##123F02;\n  text-shadow: 2px 2px;\n  box-shadow: 10px 10px;\n}","css-utilis-3#CSS utilis":"","common-layout-utilis#Common layout utilis":"margin: https://www.w3schools.com/css/css_margin.asp\npadding: https://www.w3schools.com/css/css_padding.asp\nHeight, Width: https://www.w3schools.com/css/css_dimension.asp\nborder: https://www.w3schools.com/css/css_border.asp\nfloat: https://www.w3schools.com/css/css_float.asp","css-utilis-4#CSS utilis":"","common-layout-utilis-advance#Common layout utilis (Advance)":"position : https://www.w3schools.com/css/css_positioning.asp\ndisplay : https://www.w3schools.com/css/css_display_visibility.asp\nz-index : https://www.w3schools.com/css/css_z-index.asp","css-utilis-5#CSS utilis":"","common-layout-utilis-important#Common layout utilis (Important)":"display: flex\njustify-content: flex-start | flex-end | center | space-between | space-around;\nalign-items: flex-start | flex-end | center | baseline | stretch;\nhttps://www.casper.tw/css/2017/07/21/css-flex/","display-flex-demo#display flex demo":"https://grid.malven.co/","display-flex-practice-game#display flex practice game":"https://flexboxfroggy.com/","break-1#Break":"","introduce-to-bulma#Introduce to bulma":"Bulma is a free, open source framework that provides ready-to-use frontend components that you can easily combine to build responsive web interfaces.\nhttps://bulma.io/documentation/overview/start/","why-bulma#Why bulma":"Builded decent components to use\nDecent UI\nEasy responsive website setting\nWrite less CSS","install-in-html#Install in HTML":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>Hello Bulma!</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css\">\n  </head>\n  <body>\n  <section class=\"section\">\n    <div class=\"container\">\n      <h1 class=\"title\">\n        Hello World\n      </h1>\n      <p class=\"subtitle\">\n        My first website with <strong>Bulma</strong>!\n      </p>\n    </div>\n  </section>\n  </body>\n</html>","columns#Columns":"https://bulma.io/documentation/columns/basics/","elements#Elements":"Button: https://bulma.io/documentation/elements/button/\nBox: https://bulma.io/documentation/elements/box/\nTitle: https://bulma.io/documentation/elements/title/\nAnd more: https://bulma.io/documentation/elements/","components#Components":"Navbar: https://bulma.io/documentation/components/navbar/\nCard: https://bulma.io/documentation/components/card/\nAnd more: https://bulma.io/documentation/components/","lab-01---enhance-the-introduce-yourself#Lab 01 - Enhance the Introduce yourself":"Remember the previous Introduce yourself page from lecture 02?\nLet's create more CSS and bulma to decorate it!","lab-01---enhance-the-introduce-yourself-1#Lab 01 - Enhance the Introduce yourself":"Something that you Should add to your pages\nText Color and background color\nFont size, text align\nBorder\nAt least two elements that from bulma\nSomething that you Can add to your pages\nMore bulma components and layout stuff\nMore you can think of ...","end#End":""}},"/lifeIsPossible/Lecture/lecture-04/lecture-04-chinese":{"title":"Lecture 4 - Introduce to JavaScript | Life is Possible - 生命教育 手機程式工作坊","data":{"":"講課 04 - JavaScript 簡介","目錄#目錄":"深入探索程式設計\n介紹使用 JavaScript 實現真正的程式設計","使用邏輯積木編程嗎#使用邏輯積木編程嗎？":"","真正的程式設計師不這麼做#真正的程式設計師不這麼做...":"","真正的程式設計師僅用文字單字編寫程式碼#真正的程式設計師僅用文字/單字編寫程式碼":"","程式語言#程式語言":"","為什麼我們學習-javascript#為什麼我們學習 JavaScript？":"對於初學者來說相對容易學習\n只需學習一次，可在任何地方使用 (Web / 桌面 / Linux)\n在全球具有高度的普及度\nhttps://www.stackscale.com/blog/most-popular-programming-languages/\n有龐大的社群支援以及擁有豐富的庫支援 npm","javascript-可以運行於#Javascript 可以運行於":"🖥 網頁瀏覽器 (使用 V8 引擎)\n📱 Android (使用 V8 引擎和瀏覽器)\n📲 IOS (使用 V8 引擎和瀏覽器)\n🖥 Windows (使用 Nodejs)\n💻 MacOS (使用 Nodejs)\n🖱 Linux (使用 Nodejs)\n幾乎你日常生活中所看到的任何東西都可以運行 JavaScript。","撰寫歡迎程式#撰寫歡迎程式":"app.js\nlet str = \"reemo\"\nconsole.log(\"Hello all\");\nconsole.log(str);\nconsole.log(\"This is \" + str);\n然後在終端機中輸入 node app.js 以執行腳本。注意：如果您沒有安裝 nodejs，請立即從 https://nodejs.org/en/ 安裝它。","consolelog#console.log()":"這是 JavaScript 中用來列印訊息的基本函數","用法#用法":"console.log(\"Hello world\"); // \"Hello world\"\nconsole.log(\"Hello \" + \"Peter\"); // \"Hello Peter\"\nconsole.log(\"Hello\", \"Peter\"); // \"Hello Peter\"\nconsole.log(100); // 100\nconsole.log(100 + 45); // 145","今天的-javascript-課程#今天的 JavaScript 課程":"資料類型 Data Types\n算術運算子 Arithmetic Operators\n賦值運算子 Assignment Operators\n定義變數 Define variables\n條件語句 Conditional Statements\n比較語句 Compare Statements\n函式 Functions","javascript-comments-註解#JavaScript Comments 註解":"用於解釋代碼，並使其更可讀\n註解中的代碼將不會運行/執行/編譯\n單行註解以 // 開頭。\n// I will not run\n// console.log(\"Hello\")\n// Hello mate\nconsole.log(\"yo hi\")","javascript-comments-註解-1#JavaScript Comments 註解":"多行註解以 /* 開頭，以 */ 結尾.\n/*\nHello\nThis is multi line comments\nI can contains a lot of stuff\nin the same block\nconsole.log(\"Yoooo\")\n*/\nconsole.log(\"mate\")","常見的資料型別#常見的資料型別":"string 字串型別，例如 \"Hello\", \"Good day\", \"I go to school by bus\"\nnumber 數值型別，例如 12, -3, 32.476, 0x012, 11010010\nboolean 布林型別，例如 true, false","string#string":"顯示常見的字串 / 字元\n\"Hello world\", \"a\", \"😀\" (Using \" ) （使用雙引號）\n'Hello mate', 'b', '😍' (Using ' ) （使用單引號）\n`Hello mom`, `c`, `😎` (Using ` ) （使用反引號）","number#number":"代表數學運算中的數值資料型別 ( +, -, *, /, % )\nInteger 整數: 1, 384\nSigned Integer 有正負號的整數: 1, 384, -43\nFloat / Double 浮點數 / 雙精度浮點數: 1.23, -34.3423, 0.001\n(Float 浮點數 = 單精度，Double 雙精度浮點數 = 雙精度)\nInfinity 無限大: infinity, -infinity","number-基本算術運算子#number 基本算術運算子":"+ : Addition 加法 (e.g. 3 + 5 = 8)\n- : Subtraction 減法 (e.g. 8 - 2 = 6)\n* : Multiplication 乘法 (e.g. 3 * 4 = 12)\n/ : Division 除法 (e.g. 10 / 5 = 2, 14 / 5 = 2.8)","更多-number-算術運算符#更多 number 算術運算符":"","通常在一般情況下使用的#通常在一般情況下使用的":"** : 指數運算 Exponentiation ( 2^3 => 2**3 )\n% : 取模運算 / 求餘數 Modulus / Remainder ( 5 % 2 == 1, 10 % 2 == 0 )","通常在循環中使用的#通常在循環中使用的":"(將在下一課中介紹更多)\n++ : 自增 (i++)\n-- : 自減 (i--)","boolean-布爾值#boolean 布爾值":"它是一種用於確定條件是否發生的數據類型。在此數據類型中，僅出現 true 和 false。\ntrue: 表示條件將發生 / 匹配。\nfalse: 表示條件將不會發生 / 不匹配。","boolean-示例#boolean 示例":"13 == 100 // Is 13 equal to 100 ? false\n100 > 50  // Is 100 bigger than 50 ? true\n0 < 2     // Is 0 smaller than 2 ? true\n\"tom\"   == \"hello tom\" // Is \"tom\" equal to \"hello tom\" ? false\n\"apple\" == \"apple\"   // Is \"apple\" equal to \"apple\" ? true","boolean-and--or--not-#boolean and &&, or ||, not !":"在所有的程式語言中，幾個符號代表邏輯運算。\nand : 使用 &&\nor : 使用 ||\nnot : 使用 !","boolean-與-and--or--not-#boolean 與 and &&, or ||, not !":"and : 表示兩個條件都成立時，會回傳 true。\nor : 表示其中一個條件成立時，會回傳 true。\nnot : 反轉條件 (!true => false, !false => true)","為什麼要使用-and--or--not-#為什麼要使用 and &&, or ||, not !":"其實這是一個現實生活中的簡單問題或邏輯句子。如果我們要用表示一個條件：\n如果(If)今天是星期一，且(and)天氣沒有下雨，那麼我會去彼得家。\n在程式語言中，我們會這樣寫：\nif(today.day == \"monday\" && today.weather != \"raining\"){\n    goToPeterHome();\n}","為什麼要使用-and-or-not#為什麼要使用 and, or, not":"更複雜的條件可能會像這樣：\n這是湯姆。嘿，彼得，我想跟你玩一個遊戲。\n從1到6猜一個數字，我會開始擲骰子。\n如果數字是偶數且是1或6，你將贏得遊戲。\n如果數字是偶數但是是4，你將輸。\n但如果數字是奇數，你會輸。\n但如果數字是奇數且是3，你將贏得遊戲。\n如果你是湯姆，想要跟彼得玩一個遊戲，你會在程式語言中如何寫呢？samples.js\n// let assume this function will return a random number of 1 to 6\nlet diceNumber = randomDiceNumber(); \nif(diceNumber % 2 == 0 && diceNumber == 4){\n    lose()\n}\nelse if(diceNumber % 2 == 0 && (diceNumber == 1 || diceNumber == 6)){\n    win()\n}\nelse if(diceNumber % 2 == 1 && diceNumber == 3){\n    win()\n}\nelse if(diceNumber % 2 == 1){\n    lose()\n}","在-js-中的進階資料型別#在 JS 中的進階資料型別":"（本課程中不會涵蓋，但在未來很重要）######## 常用的\n物件（Object） and 陣列（Array）\nNull and 未定義（Undefined）\n######## 進階的\n錯誤（Error）\n日期（Date）\n映射（Map） and 集合（Set）\n類別（Class）","休息一下#休息一下":"","assignment-operators-指派運算子#Assignment Operators 指派運算子":"","define-a-variables-定義變量#Define a variables 定義變量":"var names = \"reemo\";\nlet age = 123;\nconst isMale = true;\n一般來說，我們可以使用var、let或const來定義變量。在大多數情況下（99.99%），由於歷史原因，我們不建議使用var.\n了解更多","define-a-variables-定義變量-1#Define a variables 定義變量":"// <declare_words> <declare_variables_name> = <data_values>\nlet names = \"reemo\";\nconst age = 10;\nlet是一個定義詞，用於告訴計算機定義一個可更改的變量。\nconst 也是一樣的，但我們假設使用const定義的變量是在定義之後不能被更改的變量。","let#let":"使用let定義的變量可以被重新定義\n具有區塊作用域 (block-scope)\nlet names = \"reemo\";\nconsole.log(names) // reemo\nnames = \"tom\"\nconsole.log(names) // tom","const#const":"通常情況下，使用const定義的變量不能被重新定義。\n具有區塊作用域 (block-scope)\nconst names = \"reemo\";\nconsole.log(names) // reemo\nnames = \"tom\" // Cannot assign to 'names' because it is a constant.\nconsole.log(names) // error: Uncaught TypeError: Assignment to constant variable.\n在像array和object這樣的數據類型中使用const有例外情況，但我們首先假設所有const變量都不能被重新分配。","條件語句#條件語句":"Compare 比較運算子: ==, ===, !=, !==\nFor Maths 數學運算子: >, <, >=, <=\nLogics 邏輯運算子: if , else if, else","比較運算子----#比較運算子 ==, ===, !=, !==":"==: 弱等於\n===: 強等於\n!=: 弱不等於\n!==: 強不等於","strong-compare-強等-和-weak-compare-弱等-#Strong compare 強等 和 Weak compare 弱等 ?":"Strong 意味著不僅值相同，而且數據類型也需要匹配。\nWeak 意味著如果值相同（無論是字符串還是數字），且內容相同，則返回 true。\n強等與弱等的例子\nlet num = 100; // type: number\nlet stringNum = \"100\" // type: string\nconsole.log( num == stringNum  ) // Weak compare: true\nconsole.log( num === stringNum ) // Strong compare: false\n注意事項：在這個例子中，num 是一個 number 的資料型態，但是 stringNum 是一個 string 的資料型態，儘管兩者都代表了 100。如果不確定要使用哪種比較類型，總是使用強比較 === !== 來確保安全。","數學比較運算子-----#數學比較運算子 : >, <, >=, <=":">: 大於\n>=: 大於或等於s\n<: 小於\n<=: 小於或等於\n10 > 6   // true\n5 < 89   // true\n10 > 10  // false, why? Since 10 not not bigger than 10, is equal to 10\n10 >= 10 // true","邏輯比較運算子-if--else-if-else#邏輯比較運算子: if , else if, else":"內部程式碼將在條件滿足時運行\nif(){} 如果條件成立，運行這個區塊的程式碼。\nelse if(){} 如果前面的條件不成立，則檢查這個條件，如果成立，運行這個區塊的程式碼。\nelse{} 如果前面的所有條件都不成立，則運行這個區塊的程式碼。","if#if":"demo.js\n// Only the conditions between the () is true, the under code will run\nif(true){\n    console.log(\"I will run yeah 😀\")\n}\nif(false){\n    console.log(\"I will NOT run oh no 😥\")\n}\nifDemo.js\nlet nums = 100;\nif(nums > 10){\n    nums += 23 // this code will run since 100 > 10 is true\n}\nconsole.log(nums) // 123\nifDemoTwo.js\nlet nums = 5;\nif(nums > 10){\n    nums += 23 // this code will NOT run since 5 > 10 is false\n}\nconsole.log(nums) // 5","if-與-else#if 與 else":"demo.js\n// If the conditions in `if` is false, it will run the else code sections\nif(false){\n    console.log(\"I will NOT run oh no 😥\")\n}\nelse{\n    console.log(\"I will run yeah 😀\")\n}","if-與-else-1#if 與 else":"ifElseDemo.js\nlet nums = 20;\nif(nums > 10){ \n    nums += 23 // if the nums > 10 is true, this line will run\n}\nelse{\n    nums -= 10 // if the nums > 10 is false, this line will run\n}\nconsole.log(nums) // 43","if-與-else-2#if 與 else":"ifElseTwoDemo.js\nlet nums = 5;\nif(nums > 10){ \n    nums += 23 // if the nums > 10 is true, this line will run\n}\nelse{\n    nums -= 10 // if the nums > 10 is false, this line will run\n}\nconsole.log(nums) // -5","進階-if-與-else-使用#進階 if 與 else 使用":"以下代碼邏輯上是不一樣\nif(true){\n    console.log(\"I will run yeah 😀\")\n}\nconsole.log(\"I will run no matter if() is true or false\")\nif(false){\n    console.log(\"I will run yeah 😀\")\n}\nelse{\n    console.log(\"I will run But only if() is false\")\n}","if-與-else-與-else-if#if 與 else 與 else if":"ifElseDemo.js\nlet nums = 50;\nif(nums == 10){ \n   console.log(\"I am a 10\")\n}\nelse if(nums == 20){\n    console.log(\"I am a 20\")\n}\nelse{\n    console.log(\"nope\") // This line will be printed\n}\n// \"nope\"","if-與-else-與-else-if-1#if 與 else 與 else if":"ifElseDemo.js\nlet nums = 10;\nif(nums == 10){ \n   console.log(\"I am a 10\") // This line will be printed\n}\nelse if(nums == 20){\n    console.log(\"I am a 20\")\n}\nelse{\n    console.log(\"nope\") \n}\n// \"I am a 10\"","if-與-else-與-else-if-2#if 與 else 與 else if":"ifElseDemo.js\nlet nums = 20;\nif(nums == 10){ \n   console.log(\"I am a 10\") \n}\nelse if(nums == 20){\n    console.log(\"I am a 20\") // This line will printed\n}\nelse{\n    console.log(\"nope\") \n}\n// \"I am a 20\"","functions-函数#Functions 函数":"","functions-函数-1#Functions 函数":"函數是一個為了完成特定任務而設計的代碼塊。basic-function.js\nfunction myFunctionName(){\n    // Stuff to do when this function is called.\n    console.log(\"Hello mate.\")\n}\nmyFunctionName() // calling the function","functions-with-params-帶參數的函數#Functions with params 帶參數的函數":"函數可以傳入參數，以便重複使用。basic-function-params.js\nfunction greetings(names){\n    // Stuff to do when this function is called.\n    console.log(\"Hello \" + names)\n}\ngreetings(\"peter\") // Hello peter\ngreetings(\"tom\") // Hello tom","functions-with-more-params-帶多個參數的函數#Functions with more params 帶多個參數的函數":"函數也可以傳入很多參數。basic-function-params.js\nfunction greetings(names, ages){\n    // Stuff to do when this function is called.\n    console.log(\"Hello \" + names)\n    console.log(\"Are you the age of \" + ages + \" ?\")\n}\ngreetings(\"peter\", 18) // Hello peter / Are you the age of 18 ?\ngreetings(\"tom\", 33) // Hello tom / Are you the age of 33 ?","functions-return-函數回傳#Functions return 函數回傳":"函數可以回傳 return 一個值，讓其他變數使用。function-return.js\nfunction returnSentences(names){\n    let sentences = \"Hello \" + names;\n    return sentences\n}\nlet myNameSentences = returnSentences(\"peter\"); //myNameSentences = \"Hello peter\" \nconsole.log(myNameSentences); // \"Hello peter\"\nconsole.log(returnSentences(\"tom\")); // \"Hello tom\"","advance-functions-arrow-function-bonus#Advance Functions: Arrow Function (Bonus)":"","進階函數箭頭函數#進階函數：箭頭函數":"在 JavaScript 中，函數也可以像這樣編寫：\nlet myFunction = (a, b) => a * b;","休息一下-1#休息一下":"","lab-01---定義變數和類型#Lab 01 - 定義變數和類型":"Peter 想要定義一些變數，但他不知道該怎麼做。你可以幫他嗎？\n定義兩個 let 變數 income 和 outcome，其值分別為 10000 和 4000。\n定義兩個 const 變數 names 和 date，其值分別為 \"Peter\" 和 \"2022-03-06\"。\n定義一個 let 變數 total，它是基於 income - outcome 得出的總數。","lab-01---定義變數和類型-1#Lab 01 - 定義變數和類型":"lab02-template.js\nlet someStuff = ...\nconst someStuffAlso = ...","lab-02---檢查學生階段#Lab 02 - 檢查學生階段":"編寫一個程序，根據以下要求檢查學生的教育階段：如果學生的年齡小於5歲，他/她將處於未接受教育狀態。\n如果學生的年齡在6到12歲之間，他/她將處於小學狀態。\n如果學生的年齡在13到18歲之間，他/她將處於中學狀態。\n如果學生的年齡在19到22歲之間，他/她將處於大學狀態。\n如果學生的年齡大於23歲，他/她將處於工作狀態。","lab-02---檢查學生階段-1#Lab 02 - 檢查學生階段":"lab02-template.js\nfunction calculateAgeStatus(age){\n    console.log(age)\n    // Your code\n}\n// Testing\ncalculateAgeStatus(4)  // 未接受教育\ncalculateAgeStatus(59) // 工作\ncalculateAgeStatus(16) // 中學\ncalculateAgeStatus(8)  // 小學\ncalculateAgeStatus(21) // 大學","總結#總結":"我們學習了以下內容：\n執行 app.js\n用 console.log 輸出變量\n資料型別 string, number, boolean\n算術運算符 ++, *, / 等等\n賦值運算符 =, +=, *=, /= 等等\n定義變量 let, const, var\n條件語句 if, else\n比較語句 ==, ===, <= 等等\n函數 function add(a,b){ return a + b }","更多練習#更多練習":"https://code.tecky.io/\nhttps://js.checkio.org/","更多學習資料#更多學習資料":"在本課程中，我們沒有涉及以下內容：\nObject, Array, for loop (物件、陣列、for 迴圈)\nArray Looping (for, while) (陣列迴圈 (for, while))\nScope (作用域)\n但如果有興趣，您可以自行閱讀 lecture-ex1 的內容。","完結#完結":""}},"/lifeIsPossible/Lecture/lecture-04/lecture-04":{"title":"Lecture 4 - Introduce to JavaScript | Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture 04 - Introduce to JavaScript","menu#Menu":"Deep into programming\nIntroduce to real programming with Javascript","coding-with-logic-block#Coding with logic block?":"","real-programmer-dont-do-this#Real programmer dont do this...":"","real-programmer-code-with-text--words-only#Real programmer code with text / words only":"","programming-languages#Programming languages":"","why-we-learn-javascript#Why we learn Javascript?":"Relative Easy to learn as a beginner\nLearn once, use everywhere (web / desktop / linux)\nHigh popularity across the world\nhttps://www.stackscale.com/blog/most-popular-programming-languages/\nGreat community support and large library support npm","javascript-can-run-on#Javascript can run on":"🖥 Web browser (V8 engine base)\n📱 Android (V8 engine with browser)\n📲 IOS (V8 engine with browser)\n🖥 Windows (Nodejs)\n💻 MacOS (Nodejs)\n🖱 Linux (Nodejs)\nAlmost everything you can seen from daily life can run javascript.","write-a-welcoming-program#Write a welcoming program":"app.js\nlet str = \"reemo\"\nconsole.log(\"Hello all\");\nconsole.log(str);\nconsole.log(\"This is \" + str);\nThen type node app.js in the terminal to run the script.Notices: If you did not install the nodejs, install it from https://nodejs.org/en/ now.","consolelog#console.log();":"This is the fundamental function for javascript to print stuff","usage#Usage":"console.log(\"Hello world\"); // \"Hello world\"\nconsole.log(\"Hello \" + \"Peter\"); // \"Hello Peter\"\nconsole.log(\"Hello\", \"Peter\"); // \"Hello Peter\"\nconsole.log(100); // 100\nconsole.log(100 + 45); // 145","javascript-menu-today#Javascript menu today":"Data Types\nArithmetic Operators\nAssignment Operators\nDefine variables\nConditional Statements\nCompare Statements\nFunctions","javascript-comments#JavaScript Comments":"Used to explain codes, and to make it more readable.\nCodes inside comments will not run / execute / complie\nSingle line comments start with //.\n// I will not run\n// console.log(\"Hello\")\n// Hello mate\nconsole.log(\"mate\")","javascript-comments-1#JavaScript Comments":"Multi-line comments start with /* and end with */.\n/*\nHello\nThis is multi line comments\nI can contains a lot of stuff\nin the same block\nconsole.log(\"Yoooo\")\n*/\nconsole.log(\"mate\")","general-data-types-in-js#General Data Types in js":"string e.g. \"Hello\", \"Good day\", \"I go to school by bus\"\nnumber e.g. 12, -3, 32.476, 0x012, 11010010\nboolean e.g. true, false","string#string":"The common string / char that we want to shows\n\"Hello world\", \"a\", \"😀\" (Using \" )\n'Hello mate', 'b', '😍' (Using ' )\n`Hello mom`, `c`, `😎` (Using ` )","number#number":"A data type to represent a number for math computations. ( +, -, *, /, % )\nInteger: 1, 384\nSigned Integer: 1, 384, -43\nFloat / Double: 1.23, -34.3423, 0.001\n(Float = single-precision, Double = double-precision)\nInfinity: infinity, -infinity","number-basic-arithmetic-operators#number Basic Arithmetic Operators":"+ : Addition (e.g. 3 + 5 = 8)\n- : Subtraction (e.g. 8 - 2 = 6)\n* : Multiplication (e.g. 3 * 4 = 12)\n/ : Division (e.g. 10 / 5 = 2, 14 / 5 = 2.8)","more-number-arithmetic-operators#More number Arithmetic Operators":"","commons-in-general#Commons in general":"** : Exponentiation ( 2^3 => 2**3 )\n% : Modulus / Remainder ( 5 % 2 == 1, 10 % 2 == 0 )","commons-in-loop#Commons in loop":"(will cover more in next lesson)\n++ : Increment (i++)\n-- : Decrement (i--)","boolean#boolean":"A data type to determine the conditions will happends or not. ONLY true and false will be appares on this data type.\ntrue: Means the conditions will be happend / is match.\nfalse: Means the conditions will be NOT BE happend / is NOT match.","boolean-example#boolean example":"13 == 100 // Is 13 equal to 100 ? false\n100 > 50 // Is 100 bigger than 50 ? true\n0 < 2 // Is 0 smaller than 2 ? true\n\"tom\" == \"hello tom\" // Is \"tom\" equal to \"hello tom\" ? false\n\"apple\" == \"apple\" // Is \"apple\" equal to \"apple\" ? true","boolean-and--or--not-#boolean and &&, or ||, not !":"In all programming languages, several symbo will be represent the logics.\nand : Using &&\nor : Using ||\nnot : Using !","boolean-with-and--or--not-#boolean with and &&, or ||, not !":"and : Means two conditions are true, then will return true.\nor : Means either one conditions is true, then will return true.\nnot : Reverse the conditions (!true => false, !false => true)","why-and--or--not-#Why and &&, or ||, not !":"Actually this is an simple question or logic sentence in real life.If we want to represent a conditions in english like this:\nIf today is monday and the weather is not raining, then I will go to Peter's home.\nIn programming, we code like this:\nif(today.day == \"monday\" && today.weather != \"raining\"){\n    goToPeterHome();\n}","why-and-or-not#Why and, or, not":"A more complex conditions will be like this:\nThis is Tom. Hay Peter, I want to play a game with you. \nMake a guess between 1 to 6. And I start roll the dice.\nIf the number is a even and a one or a six, you will win the game.\nIf the number is a even but the number is 4, you will lose.\nYet, if the number is a odd, you will lose.\nBut, if the number is a odd and the number is 3, you will win.\nIf you are Tom and want to make a game to Peter, how's the login in programming languages?samples.js\n// let assume this function will return a random number of 1 to 6\nlet diceNumber = randomDiceNumber(); \nif(diceNumber % 2 == 0 && diceNumber == 4){\n    lose()\n}\nelse if(diceNumber % 2 == 0 && (diceNumber == 1 || diceNumber == 6)){\n    win()\n}\nelse if(diceNumber % 2 == 1 && diceNumber == 3){\n    win()\n}\nelse if(diceNumber % 2 == 1){\n    lose()\n}","advance-data-types-in-js#Advance Data Types in js":"######## Common (Will cover more on lecture)\nObject and Array\nNull and Undefined\n######## Advance (Will NOT cover on lecture, but important for future)\nError\nDate\nMap and Set\nClass","break#Break":"","assignment-operators#Assignment Operators":"","define-a-variables#Define a variables":"var names = \"reemo\";\nlet age = 123;\nconst isMale = true;\nIn general, we can define a variable with var, let or const.In most of the case (99.99%), we DO NOT RECOMMENDED using var due to the legacy reasons. Know more","define-a-variables-1#Define a variables":"// <declare_words> <declare_variables_name> = <data_values>\nlet names = \"reemo\";\nconst age = 10;\nlet is a define words to tell the computer to define a variable that can be changes.\nconst also, but we assume that variable define with const is the variable that CAN NOT be changed after it defined.","let#let":"Declare variables with let can be re-define\nIs block-scope\nlet names = \"reemo\";\nconsole.log(names) // reemo\nnames = \"tom\"\nconsole.log(names) // tom","const#const":"In commons, declare variables with const can NOT be re-define.\nIs block-scope\nconst names = \"reemo\";\nconsole.log(names) // reemo\nnames = \"tom\" // Cannot assign to 'names' because it is a constant.\nconsole.log(names) // error: Uncaught TypeError: Assignment to constant variable.\nThere is exceptions of using const in data type like array and object, but we assume all const variables are can not be re-assign first.","conditional-statements#Conditional Statements":"Compare: ==, ===, !=, !==\nFor Maths: >, <, >=, <=\nLogics: if , else if, else","compare-statements----#Compare Statements ==, ===, !=, !==":"==: Weak Equals to\n===: Strong Equals to\n!=: Weak Not Equals to\n!==: Strong Not Equals to","strong-compare-and-weak-compare#Strong compare and Weak compare?":"Strong means not only values matches, but the data type need to be match too.\nWeak means if the values matches (no matter is string or number), if the content is the same, then it will return true.\nStrong and Weak examples\nlet num = 100; // type: number\nlet stringNum = \"100\" // type: string\nconsole.log( num == stringNum ) // Weak compare: true\nconsole.log( num === stringNum ) // Strong compare: false\nNotices: In this examples, num is a data type of number, but stringNum is a data type of string although both represents 100.IF you are not sure which compare type to use, always use strong === !== compare for safely reasons.","maths-compare-statements-----#Maths Compare Statements : >, <, >=, <=":">: Bigger than\n>=: Bigger than or equal to\n<: Smaller than\n<=: Smaller than or equal to\n10 > 6 // true\n5 < 89 // true\n10 > 10 // false, why? Since 10 not not bigger than 10, is equal to 10\n10 >= 10 // true","logics-compare-statements-if--else-if-else#Logics Compare Statements: if , else if, else":"Inside code will run if the conditions fullfilled\nif(){}\nelse if(){}\nelse{}","if#if":"demo.js\n// Only the conditions between the () is true, the under code will run\nif(true){\n    console.log(\"I will run yeah 😀\")\n}\nif(false){\n    console.log(\"I will NOT run oh no 😥\")\n}\nifDemo.js\nlet nums = 100;\nif(nums > 10){\n    nums += 23 // this code will run since 100 > 10 is true\n}\nconsole.log(nums) // 123\nifDemoTwo.js\nlet nums = 5;\nif(nums > 10){\n    nums += 23 // this code will NOT run since 5 > 10 is false\n}\nconsole.log(nums) // 5","if-and-else#if and else":"demo.js\n// If the conditions in `if` is false, it will run the else code sections\nif(false){\n    console.log(\"I will NOT run oh no 😥\")\n}\nelse{\n    console.log(\"I will run yeah 😀\")\n}","if-and-else-1#if and else":"ifElseDemo.js\nlet nums = 20;\nif(nums > 10){ \n    nums += 23 // if the nums > 10 is true, this line will run\n}\nelse{\n    nums -= 10 // if the nums > 10 is false, this line will run\n}\nconsole.log(nums) // 43","if-and-else-2#if and else":"ifElseTwoDemo.js\nlet nums = 5;\nif(nums > 10){ \n    nums += 23 // if the nums > 10 is true, this line will run\n}\nelse{\n    nums -= 10 // if the nums > 10 is false, this line will run\n}\nconsole.log(nums) // -5","advance-if-and-else-usage#Advance if and else usage":"Following code are not the same\nif(true){\n    console.log(\"I will run yeah 😀\")\n}\nconsole.log(\"I will run no matter if() is true or false\")\nif(false){\n    console.log(\"I will run yeah 😀\")\n}\nelse{\n    console.log(\"I will run But only if() is false\")\n}","if-and-else-and-else-if#if and else and else if":"ifElseDemo.js\nlet nums = 50;\nif(nums == 10){ \n   console.log(\"I am a 10\")\n}\nelse if(nums == 20){\n    console.log(\"I am a 20\")\n}\nelse{\n    console.log(\"nope\") // This line will printed\n}\n// \"nope\"","if-and-else-and-else-if-1#if and else and else if":"ifElseDemo.js\nlet nums = 10;\nif(nums == 10){ \n   console.log(\"I am a 10\") // This line will printed\n}\nelse if(nums == 20){\n    console.log(\"I am a 20\")\n}\nelse{\n    console.log(\"nope\") \n}\n// \"I am a 10\"","if-and-else-and-else-if-2#if and else and else if":"ifElseDemo.js\nlet nums = 20;\nif(nums == 10){ \n   console.log(\"I am a 10\") \n}\nelse if(nums == 20){\n    console.log(\"I am a 20\") // This line will printed\n}\nelse{\n    console.log(\"nope\") \n}\n// \"I am a 20\"","functions#Functions":"","functions-1#Functions":"function is a block of code designed to perform a particular task.basic-function.js\nfunction myFunctionName(){\n    // Stuff to do when this function is called.\n    console.log(\"Hello mate.\")\n}\nmyFunctionName() // calling the function","functions-with-params#Functions with params":"A function can be pass in params for the purpose of re-use.basic-function-params.js\nfunction greetings(names){\n    // Stuff to do when this function is called.\n    console.log(\"Hello \" + names)\n}\ngreetings(\"peter\") // Hello peter\ngreetings(\"tom\") // Hello tom","functions-with-more-params#Functions with more params":"A function can be pass a lot of params too.basic-function-params.js\nfunction greetings(names, ages){\n    // Stuff to do when this function is called.\n    console.log(\"Hello \" + names)\n    console.log(\"Are you the age of \" + ages + \" ?\")\n}\ngreetings(\"peter\", 18) // Hello peter / Are you the age of 18 ?\ngreetings(\"tom\", 33) // Hello tom / Are you the age of 33 ?","functions-return#Functions return":"A function can be return a values for other variable to use too.function-return.js\nfunction returnSentences(names){\n    let sentences = \"Hello \" + names;\n    return sentences\n}\nlet myNameSentences = returnSentences(\"peter\"); //myNameSentences = \"Hello peter\" \nconsole.log(myNameSentences); // \"Hello peter\"\nconsole.log(returnSentences(\"tom\")); // \"Hello tom\"","advance-functions-arrow-function-bonus#Advance Functions: Arrow Function (Bonus)":"In javascript, a function can also code like this\nlet myFunction = (a, b) => a * b;","break-1#Break":"","lab-01---define-variables-and-types#Lab 01 - Define variables and types":"Peter want's to define some variables but he don't know how to do. Can you help him?\nDefine two let variables income and outcome\nwith values 10000 and 4000.\nDefine two const variables names and date\nwith values \"Peter\" and \"2022-03-06\".\nDefine a let variable total that base on income - outcome to get the total count.","lab-01---define-variables-and-types-1#Lab 01 - Define variables and types":"lab02-template.js\nlet someStuff = ...\nconst someStuffAlso = ...","lab-02---check-student-stages#Lab 02 - Check student stages":"Write a program to check the student education stages by the following requirement:If the student age lower than 5, he / she will be in Not educated\nIf the student age between 6 to 12, he / she will be in Primary school\nIf the student age between 13 to 18, he / she will be in Secondary school\nIf the student age between 19 to 22, he / she will be in University\nIf the student age bigger 23, he / she will be in Workingconsole.log() the status if the age match that status.","lab-02---check-student-stages-cont#Lab 02 - Check student stages (Cont)":"lab02-template.js\nfunction calculateAgeStatus(age){\n    console.log(age)\n    // your code\n}\n// Testing\ncalculateAgeStatus(4)  // Not educated\ncalculateAgeStatus(59) // Working\ncalculateAgeStatus(16) // Secondary school\ncalculateAgeStatus(8)  // Primary school\ncalculateAgeStatus(21) // University","summary#Summary":"We have learn the:\nRun a app.js\nPrint variables with console.log\nData Types string, number, boolean\nArithmetic Operators ++, *, / ...\nAssignment Operators =, +=, *=, /= ...\nDefine variables let, const, var\nConditional Statements if, else\nCompare Statements ==, ===, <= ...\nFunctions function add(a,b){ return a + b }","more-pratices#More pratices":"https://code.tecky.io/\nhttps://js.checkio.org/","more-materials#More materials":"We skipper these concepts in this course\nObject, Array, for loop\nArray Looping (for, while)\nScope\nBut you can read it by your own if interested in lecture-ex1","end#End":""}},"/lifeIsPossible/Lecture/lecture-05/lecture-05-chinese":{"title":"Life is Possible - 生命教育 手機程式工作坊","data":{"":"講課 05 - 使用 JavaScript 與 HTML 互動","目錄#目錄":"在 HTML 中使用 JS\nDOM 控制\n制作一個小小的測驗遊戲","回顧#回顧":"我們在之前的課程中學到了什麼？\nlet a = 10;\nif(a === 10){\n  console.log(\"Hello mate\")\n}\nfunction calculateAgeStatus(age){\n    console.log(`You are in ${age} right?`)\n}\ncalculateAgeStatus(16)","回顧總結#回顧總結":"執行 app.js\n用 console.log 輸出變量\n資料型別 string, number, boolean\n算術運算符 ++, *, / 等等\n賦值運算符 =, +=, *=, /= 等等\n定義變量 let, const, var\n條件語句 if, else\n比較語句 ==, ===, <= 等等\n函數 function add(a,b){ return a + b }","但是#但是":"如果 JavaScript 放在 HTML 中呢？","快速測試#快速測試":"我們有一個 HTML 文件作為快速小測驗，我們該如何知道使用者輸入了正確的答案？","使用-html-#使用 HTML ?":"糟糕了，HTML 只用於定義元素。","使用-css-#使用 CSS ?":"不行。CSS 只用於樣式。","使用-javascript-#使用 Javascript ?":"對，但為什麼？","我們需要在-html-中使用-javascript#我們需要在 HTML 中使用 JavaScript":"JavaScript 是 HTML 中的大腦，它幫助執行所有計算/邏輯渲染工作。例如：是否有東西被點擊？計算使用者輸入的總和。","在-html-中加入-script#在 HTML 中加入 script":"在 HTML 中，我們可以添加 <script> 標籤來使用 JavaScript。\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>Document</title>\n</head>\n<body>\n    <h1> Yo all </h1>\n    <script> <!-- Add me for using script -->\n        console.log(\"Hello all\")\n    </script>\n</body>\n</html>","在-html-中加入-script-1#在 HTML 中加入 script":"<script> \n      let a = 100;\n      let b = 23;\n      let c = a + b;\n      console.log(c); // where is it logged to?\n</script>\n在網頁中按下右鍵或按下 F12 開啟 DevTools ，然後在右上方尋找 Console。","使用--documentqueryselector-控制網頁元素#使用  document.querySelector() 控制網頁元素":"","web-js-的基本網頁元素控制#Web JS 的基本網頁元素控制":"讓我們假設有以下的 HTML：index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <h3 class=\"yolo\">yolo hi</h3>\n</body>\n</html>","取得-dom-元素#取得 DOM 元素":"一般來說，我們有以下兩個方法可以取得相對應的元素，兩個方法都是網頁內建的。\n// getElementBy\nconst msgBox = document.getElementById('msg'); // Is a id\nconst yoloBox = document.getElementsByClassName(\"yolo\"); // Is a array\n// querySelector\nconst msgBoxQu = document.querySelector('##msg'); // Is a id\nconst yoloBoxQu = document.querySelector(\".yolo\"); // Not a array\n// 因為 msg 是一個 id，所以我們需要加上 ##\n// 因為 yolo 是一個 class，所以我們需要加上 .\n這些方法可以幫助我們取得相關的元素。","將互動加入到框框裡#將互動加入到框框裡":"一般來說，我們可以在 DOM 元素中加入事件：\nconst msgBox = document.getElementById('msg');\n// When the msgBox box clicked, a message box will be pop up \nmsgBox.addEventListener(\"click\", function() {\n    alert(\"Hello mate\")\n});\nindex.html with const\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <script>\n        const msgBox = document.getElementById('msg');\n        // When the msgBox box clicked, a message box will be pop up \n        msgBox.addEventListener(\"click\", function() {\n            alert(\"Hello mate\")\n        });\n    </script>\n</body>\n</html>\nindex.html with document\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <script>\n        // When the msgBox box clicked, a message box will be pop up \n        document.getElementById('msg').addEventListener(\"click\", function() {\n            alert(\"Hello mate\")\n        });\n    </script>\n</body>\n</html>","dom值控制#DOM值控制":"您也可以通過 innerHTML 控制元素的消息。index.html with const\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <h3 id=\"yolo\">yolo hi</h3>\n    <script>\n        const msgBox = document.getElementById('msg');\n        const yoloBox = document.getElementById('yolo');\n        msgBox.addEventListener(\"click\", function() {\n            yoloBox.innerHTML = \"hello ar\"\n        });\n    </script>\n</body>\n</html>\nindex.html with document\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <h3 id=\"yolo\">yolo hi</h3>\n    <script>\n        document.getElementById('msg').addEventListener(\"click\", function() {\n            document.getElementById('yolo').innerHTML = \"hello ar\"\n        });\n    </script>\n</body>\n</html>","更多-innerhtml-參考資料#更多 innerHTML 參考資料":"counter.html\n<body>\n    <h3 id=\"counter\">0</h3>\n    <button id=\"addCount\">add num</button>\n    <script>\n        const counterNumber = document.getElementById('counter');\n        const addCount = document.getElementById('addCount');\n        addCount.addEventListener(\"click\", function() {\n            let originalNUmber = parseInt(counterNumber.innerHTML)\n            originalNUmber ++;\n            counterNumber.innerHTML = originalNUmber\n        });\n    </script>\n</body>","休息一下#休息一下":"","控制輸入#控制輸入":"在 HTML 中，我們有一個標籤 <input>，允許用戶輸入內容。\nHTML 的 <input> 元素用於創建交互式控件，以便接受用戶從網頁表單中輸入的數據。\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input","用-input-控制#用 <input> 控制":"<input> 標籤用於獲取用戶輸入的數據，並將其發送回服務器/本地進行檢查。例如，我們可以像這樣使用 <input> 標籤：\n<input id=\"textInput\" type=\"text\">\n<input id=\"numberInput\" type=\"number\">\n<input \n    type=\"file\" id=\"fileInput\"\n    id=\"avatar\" name=\"avatar\"\n    accept=\"image/png, image/jpeg\"\n>","用-input-type-控制#用 <input type=\"???\"> 控制":"支持以下類型：\ntext, number, date\npassword, email\ncheckbox, radio\ncolor, url\nweek, month, time, datetime-local, date\ntel, range\nsubmit, reset\n以及更多...","取得-input-值#取得 <input> 值":"在 JavaScript 中要取得 <input> 的值，必須先給予它一個 id 或 class。index.html\n<input id=\"textInput\" type=\"text\" value=\"hello\">\n接著，在 JavaScript 中，我們可以使用 .value 屬性來取得它的值。index.js\nconst textInput = document.getElementById(\"textInput\");\nconsole.log(textInput.value);","當使用者輸入時取得-input-值#當使用者輸入時取得 <input> 值":"為了偵測使用者的輸入事件，我們可以使用 addEventListener 與 input 事件來聆聽輸入事件。index.html\n<input id=\"textInput\" type=\"text\">\nindex.js\nconst textInput = document.getElementById(\"textInput\");\ntextInput.addEventListener(\"input\", () => {\n    console.log(textInput.value)\n})","當使用者輸入時取得多個-input-值#當使用者輸入時取得多個 <input> 值":"如果要取得多個不同的 <input>，必須為每個 <input> 元素分別指定不同的 id。\n<input id=\"textInput\" type=\"text\">\n<input id=\"englishInput\" type=\"text\">\nindex.js\nconst textInput = document.getElementById(\"textInput\");\nconst englishInput = document.getElementById(\"englishInput\");\ntextInput.addEventListener(\"input\", () => {\n    console.log(textInput.value)\n})\nenglishInput.addEventListener(\"input\", () => {\n    console.log(englishInput.value)\n})","休息一下-1#休息一下":"","lab-1-數學測驗#Lab 1: 數學測驗":"撰寫一個數學測驗的網站，每次會產生不同的數學題目及答案，並依據使用者輸入來檢查答案是否正確。範例:\n這一次的題目是 10 + 23 = ?\n其他時間的題目是 10 + 36 = ?\n另一次的題目是 10 + 2 = ?\n您可以參考 quiz.html 檔案進行實作。提示 1: 使用 Math.floor(Math.random() * 30) 產生一個隨機整數。","lab-1-數學測驗提示#Lab 1: 數學測驗提示":"tips1.js\nlet rngNum = Math.floor( Math.random() * 30) + 1;\ntips2.html\n<h3>Questions: 10 + <p id=\"rngNumberBox\"></p> = ?</h3>","lab-11-加強版數學測驗#Lab 1.1: 加強版數學測驗":"如果您已經完成了練習 1，請嘗試調整題目為：\n問題: 10 + x = 45，找出 x 的值\n問題: 14 + x = 32，找出 x 的值\n製作一個網站，要求使用者輸入 x，並檢查 x 是否符合方程式。答案也應該是隨機產生的。","結束#結束":""}},"/lifeIsPossible/Lecture/lecture-05/lecture-05":{"title":"Lecture 5 - Interact JS in HTML | Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture 05 - Interact JS in HTML","menu#Menu":"Using JS in html\nDOM control\nMaking a mini quiz game","recall#Recall":"What we have learn in previous lessons?\nlet a = 10;\nif(a === 10){\n  console.log(\"Hello mate\")\n}\nfunction calculateAgeStatus(age){\n    console.log(`You are in ${age} right?`)\n}\ncalculateAgeStatus(16)","recall-summary#Recall Summary":"Run a app.js\nPrint variables with console.log\nData Types string, number, boolean\nArithmetic Operators ++, *, / ...\nAssignment Operators =, +=, *=, /= ...\nDefine variables let, const, var\nConditional Statements if, else\nCompare Statements ==, ===, <= ...\nFunctions function add(a,b){ return a + b }","but#But":"What if javascript in HTML?","quick-test#Quick test":"We have a html file for a quick quiz\nHow can we know the user input the correct ans?","using-html-#Using HTML ?":"Opps, HTML is only for elements","using-css-#Using CSS ?":"Nope. CSS is only for style","using-javascript-#Using Javascript ?":"Correct, but why?","we-need-javascript-in-html#We need Javascript in HTML":"Javascript is the brain in HTML\nIt helps to do all the calculate / logics rendering jobExample of: Is something clicked? Calculate the sum of user inputs.","add-script-in-html#Add script in html":"In html, we would add a <script> tag for using javascript.\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>Document</title>\n</head>\n<body>\n    <h1> Yo all </h1>\n    <script> <!-- Add me for using script -->\n        console.log(\"Hello all\")\n    </script>\n</body>\n</html>","writing-script-in-html#Writing script in html":"<script> \n      let a = 100;\n      let b = 23;\n      let c = a + b;\n      console.log(c); // where is it logged to?\n</script>\nRight click in your html OR press F12 to open the DevTools\nThen find the Console in the right top sections.","control-the-dom-with-documentqueryselector#Control the Dom with document.querySelector()":"","basic-dom-control-in-web-js#Basic Dom control in web js":"Let's assume we have the HTML like thisindex.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <h3 class=\"yolo\">yolo hi</h3>\n</body>\n</html>","get-the-dom-elements#Get the DOM elements":"In general, we have these function to get the regarding elements. Both function are build in for web.\n// getElementBy\nconst msgBox = document.getElementById('msg'); // Is a id\nconst yoloBox = document.getElementsByClassName(\"yolo\"); // Is a array\n// querySelector\nconst msgBoxQu = document.querySelector('##msg'); // Is a id\nconst yoloBoxQu = document.querySelector(\".yolo\"); // Not a array\n// Since msg is a id, so we need to add ##\n// Since yolo is a class, so we need to add .\nThose function can help us to get the regarding elements.","add-interactions-to-boxes#Add interactions to boxes":"In general, we can add event to the DOM elements:\nconst msgBox = document.getElementById('msg');\n// When the msgBox box clicked, a message box will be pop up \nmsgBox.addEventListener(\"click\", function() {\n    alert(\"Hello mate\")\n});\nindex.html with const\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <script>\n        const msgBox = document.getElementById('msg');\n        // When the msgBox box clicked, a message box will be pop up \n        msgBox.addEventListener(\"click\", function() {\n            alert(\"Hello mate\")\n        });\n    </script>\n</body>\n</html>\nindex.html with document\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <script>\n        // When the msgBox box clicked, a message box will be pop up \n        document.getElementById('msg').addEventListener(\"click\", function() {\n            alert(\"Hello mate\")\n        });\n    </script>\n</body>\n</html>","dom-value-control#Dom value control":"You can control the messgae of the elements by innerHTML too.index.html with const\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <h3 id=\"yolo\">yolo hi</h3>\n    <script>\n        const msgBox = document.getElementById('msg');\n        const yoloBox = document.getElementById('yolo');\n        msgBox.addEventListener(\"click\", function() {\n            yoloBox.innerHTML = \"hello ar\"\n        });\n    </script>\n</body>\n</html>\nindex.html with document\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <h3 id=\"yolo\">yolo hi</h3>\n    <script>\n        document.getElementById('msg').addEventListener(\"click\", function() {\n            document.getElementById('yolo').innerHTML = \"hello ar\"\n        });\n    </script>\n</body>\n</html>","more-references-on-innerhtml#More references on innerHTML":"counter.html\n<body>\n    <h3 id=\"counter\">0</h3>\n    <button id=\"addCount\">add num</button>\n    <script>\n        const counterNumber = document.getElementById('counter');\n        const addCount = document.getElementById('addCount');\n        addCount.addEventListener(\"click\", function() {\n            let originalNUmber = parseInt(counterNumber.innerHTML)\n            originalNUmber ++;\n            counterNumber.innerHTML = originalNUmber\n        });\n    </script>\n</body>","break#Break":"","control-with-input#Control with input":"In HTML, we have a tag <input> which allow user to input stuff\nThe HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input","control-with-input-1#Control with <input>":"The input tag is used to get the user enter data and send back to server / local checking.For examples, we use the <input> tags like this\n<input id=\"textInput\" type=\"text\">\n<input id=\"numberInput\" type=\"number\">\n<input \n    type=\"file\" id=\"fileInput\"\n    id=\"avatar\" name=\"avatar\"\n    accept=\"image/png, image/jpeg\"\n>","control-with-input-type#Control with <input type=\"???\">":"Following type are supported\ntext, number, date\npassword, email\ncheckbox, radio\ncolor, url\nweek, month, time, datetime-local, date\ntel, range\nsubmit, reset\nAnd more ...","get-input-value#Get <input> value":"To get the input value in javascript, you need to assign a id / calss to an input tag first.index.html\n<input id=\"textInput\" type=\"text\" value=\"hello\">\nThen, in javascript, we have to do it with .valueindex.js\nconst textInput = document.getElementById(\"textInput\");\nconsole.log(textInput.value);","get-input-value-when-typing#Get <input> value when typing":"To detect the user input event, we have to use addEventListener with input to listen the type event.index.html\n<input id=\"textInput\" type=\"text\">\nindex.js\nconst textInput = document.getElementById(\"textInput\");\ntextInput.addEventListener(\"input\", () => {\n    console.log(textInput.value)\n})","get-multi-input-value-when-typing#Get multi <input> value when typing":"To detect different input, assign DIFFERENT id to each <input > elements for it.\n<input id=\"textInput\" type=\"text\">\n<input id=\"englishInput\" type=\"text\">\nindex.js\nconst textInput = document.getElementById(\"textInput\");\nconst englishInput = document.getElementById(\"englishInput\");\ntextInput.addEventListener(\"input\", () => {\n    console.log(textInput.value)\n})\nenglishInput.addEventListener(\"input\", () => {\n    console.log(englishInput.value)\n})","break-1#break":"","lab-1-math-quiz#Lab 1: Math quiz":"Write a math quiz site that each time will generate a different math question and answer. And each time will regarding the user input to check if the answer match the sum.Examples:\nThis time is 10 + 23 = ?\nOther time is 10 + 36 = ?\nAnother time is 10 + 2 = ?\nYou can references to quiz.html for this labTips 1: Using Math.floor( Math.random() * 30) to generate a random integer number.","lab-1-math-quiz-tips#Lab 1: Math quiz Tips":"tips1.js\nlet rngNum = Math.floor( Math.random() * 30) + 1;\ntips2.html\n<h3>Questions: 10 + <p id=\"rngNumberBox\"></p> = ?</h3>","lab-11-bonus-math-quiz#Lab 1.1: Bonus Math quiz":"If you are doing quick in lab 1, try to adjust the questions to this:Questions: 10 + x = 45, find x\nQuestions: 14 + x = 32, find xGenerate a site that require user to input x, and check if the x can fullfill the equations.The answer should random too.","end#End":""}},"/lifeIsPossible/Lecture/lecture-06/lecture-06-chinese":{"title":"Lecture 6 - Adv topic - Github, Deployment and Planning | Life is Possible - 生命教育 手機程式工作坊","data":{"":"講課 06 - 進階- Github、部署、規劃","目錄#目錄":"Github 和 Github Desktop\n使用Vercel進行部署\n計畫和結構網站\n分組和討論","github-和-github-desktop#Github 和 Github Desktop":"https://github.com/","什麼是github#什麼是Github？":"GitHub是一個在線軟件開發平台。它用於存儲、跟踪和協作軟件項目。","什麼是github-1#什麼是Github？":"大多數程序員和IT公司使用它\n用於協作和代碼版本控制\n你可以把Github視為程序員版的 Google Drive\n所有代碼都會使用git上傳到Github","lab-01---創建github帳戶#Lab 01 - 創建Github帳戶":"https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F&source=header-home點擊上面的鏈接先註冊一個帳戶。如果你還沒有電子郵件，現在就註冊一個gmail帳戶。","github-頁面的內容#Github 頁面的內容?":"","倉庫-repositories#倉庫 (Repositories)":"每個項目都被稱為 repository（又稱為 repo）\n我們將創建一個 repository，並將所有項目代碼上傳到該 repository 中","lab-02---創建一個新的私有倉庫-private-repository#Lab 02 - 創建一個新的私有倉庫 (Private repository)":"按照以下步驟創建一個倉庫：您應該從 Github 首頁開始，點擊 右上角的加號 + 圖標，選擇 New repository","lab-02---步驟-1#Lab 02 - 步驟 1":"將倉庫命名為 <your_name>-project-website，然後選擇 Private","lab-02---步驟-2#Lab 02 - 步驟 2":"向下滾動並取消選中 Add a README file，然後點擊 Create a repository","lab-02---步驟-3#Lab 02 - 步驟 3":"如果完成，您將看到相應的屏幕。","lab-03---下載-github-桌面版#Lab 03 - 下載 Github 桌面版":"https://desktop.github.com/","lab-03---步驟-1#Lab 03 - 步驟 1":"您將看到相應的屏幕，點擊 Download for XXXX 按鈕進行下載。","lab-03---步驟-2#Lab 03 - 步驟 2":"下載完成後，點擊 Sign in with Github.com 進行登錄。","lab-03---步驟-3#Lab 03 - 步驟 3":"成功登錄後，您可能會看到相應的屏幕（不包含內容）","github-desktop-是什麼為什麼要使用#Github Desktop 是什麼？為什麼要使用？":"💻 一個基於 GUI 的 git 軟體\n📡 容易上手的 git 管理 GUI\n🧰 免費且強大\n在初步階段，我們將使用 Github Desktop 來 push，clone，pull，merge 專案。如果您對編程有興趣，當您熟悉 Github Desktop 後，您可以學習 git。","lab-04---使用-github-desktop-來-push-代碼#Lab 04 - 使用 Github Desktop 來 push 代碼":"如果您還沒完成Lab 01-03，請先完成這些實驗室。在這個實驗室中，我們將進行以下操作：\n克隆(Clone)代碼\n在本地電腦上調整代碼\n推送代碼到 Github","lab-04---步驟-1#Lab 04 - 步驟 1":"回到這個畫面，您可以在畫面中央左側看到一個名為 Set up in Desktop 的按鈕。點擊它。","lab-04---步驟-2#Lab 04 - 步驟 2":"點擊後會彈出以下畫面。選擇一個適當的 本地路徑，然後點擊藍色的 Clone 按鈕。","lab-04---步驟-3#Lab 04 - 步驟 3":"Clone 完成後，您會看到這個畫面。檢查左上角的部分是否是您的存儲庫名稱。","lab-04---步驟-4#Lab 04 - 步驟 4":"右鍵點擊左上角的部分，然後選擇 Open in Visual Stuidio Code 進入 VSC。","lab-04---步驟-5#Lab 04 - 步驟 5":"在文件夾中創建一個 index.html 和 apple.html。","lab-04---步驟-6#Lab 04 - 步驟 6":"將這些內容複製到 index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>index</title>\n</head>\n<body>\n    <h1>Hello world</h1>\n    <a href=\"/apple.html\"> Go to apple </a>\n</body>\n</html>","lab-04---步驟-7#Lab 04 - 步驟 7":"將這些內容複製到 apple.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>apple</title>\n</head>\n<body>\n    <h1>Hello apple</h1>\n    <a href=\"/index.html\"> Go to index </a>\n</body>\n</html>","lab-04---步驟-8#Lab 04 - 步驟 8":"回到 Github Desktop，選擇 index.html 和 apple.html\n在 Summary (required) 輸入框中輸入內容\n輸入後，點擊 Commit to main","lab-04---步驟-9#Lab 04 - 步驟 9":"現在你可以點擊 Published branch 按鈕了。點擊後等待上傳。","lab-04---步驟-10-done#Lab 04 - 步驟 10 Done":"如果你從 Github 網站重新整理頁面(F5)並看到 index.html 和 apple.html，表示你成功了。","lab-04-我們做了什麼#Lab 04 我們做了什麼？":"Set up in Desktop => git clone\n克隆一個項目表示下載一個項目\nType in Summary (required) + Commit to main => git commit\n提交表示對代碼庫進行了更改\nClick Published branch => git push\n推送表示將這些更改添加到分支中","休息一下#休息一下":"","將網站部署到全球#將網站部署到全球":"","如何連接網際網路並查看網站#如何連接網際網路並查看網站？":"🖥 電腦？\n🖨 物聯網裝置？\n📱 手機？\n📟 設備？\n💻 伺服器？","-伺服器#💻 伺服器":"我們需要一個伺服器來為使用者提供我們的網站/內容。伺服器將幫助我們為目標用戶提供所需的數據。","如何獲得伺服器#如何獲得伺服器":"","自我託管#自我託管?":"","雲端託管saas#雲端託管（SaaS）？":"","軟件即服務saas#軟件即服務（SaaS）":"一種軟件授權和交付模式，其中軟件以訂閱方式許可並集中託管。SaaS也被稱為'按需軟件'和Web-based/Web-hosted軟件\n例如：AWS，Azure，GCP，Digital ocean，vercel等...","使用-vercel-進行網站託管#使用 vercel 進行網站託管":"網站託管服務是一種互聯網託管服務，為客戶提供託管網站所需的設施，即使其創建和維護網站，並在全球資訊網上進行訪問。提供網站託管服務的公司有時被稱為網站託管服務提供商。\n也就是說，您可以從雲端提供商公司租用伺服器。","lab-05---部署-github-儲存庫到-vercel#Lab 05 - 部署 Github 儲存庫到 vercel":"Vercel 是為前端開發人員打造的平台，提供創新者創造靈感時需要的速度和可靠性。\n在這個實驗室中，我們將部署Lab 04 的 Github 儲存庫到 vercel。（免費）","lab-05---步驟-1#Lab 05 - 步驟 1":"打開 https://vercel.com/ ，並點擊 sign up。在該頁面中，點擊 Continus with GitHub 並進行註冊。","lab-05---步驟-2#Lab 05 - 步驟 2":"如果您可以看到此頁面，請點擊右上角的 Add New..，並選擇 Project。","lab-05---步驟-3#Lab 05 - 步驟 3":"選擇您的 repo，點選 import。\n注意: 如果您尚未在 vercel 中授權 github，請先授權。","lab-05---步驟-4#Lab 05 - 步驟 4":"在此頁面，只需點擊 Deploy，等待部署完成即可。","lab-05---步驟-5#Lab 05 - 步驟 5":"恭喜，您已經成功將網站部署到全球！\n點擊 Continus to Dashboard 並獲取 DOMAINS 網址。","lab-05---步驟-6#Lab 05 - 步驟 6":"一個隨機的 DOMAINS 將被指定給您。這是您的網站所屬的網址。您可以將鏈接分享給他人。請嘗試單擊它並將鏈接分享給他人。","lab-05---步驟-7#Lab 05 - 步驟 7":"回到具有您的專案的 VSC。\n現在，嘗試向我們的 index.html 添加更多代碼。添加任何您喜歡的內容，甚至可以打開新頁面。","lab-05---步驟-8#Lab 05 - 步驟 8":"打開一個名為 images 的 folder，並添加一個圖像。在 apple.html 中，在 <body> 中添加 <img> 標記，並參照圖像apple.html 樣本\n<img src=\"/images/hero.png\" alt=\"a nice image\">","lab-05---步驟-8-cont#Lab 05 - 步驟 8 (Cont)":"samples","lab-05---步驟-9#Lab 05 - 步驟 9":"回到 Github Desktop，執行與 Lab 04 - 步驟 8 相同的操作\n在左下角輸入提交消息\n點擊 Commit to main\n點擊右上方的 Push origin","lab-05---步驟-9-cont#Lab 05 - 步驟 9 (Cont)":"","lab-05---步驟-10-done#Lab 05 - 步驟 10 Done":"返回 vercel 並打開專案，您將看到網站已更新。","lab-05-重點vercal-和-github-repo#Lab 05 重點：Vercal 和 Github repo":"每當發生推送時，vercel 將知道您的專案已更新並使用最新版本重新部署。✨ 實際上，vercel 將使用 Github Actions 自動進行 CI / CD 進行部署。","休息一下-1#休息一下?":"","分組和討論#分組和討論":"","專案講解安排#專案講解安排":"每組由2至4名學生組成，並於接下來的三週進行專案開發。開發完成後，PWA應部署至Vercel以供公眾使用。","專案講解安排-1#專案講解安排":"組員: 自由分組，每組由2至4名學生組成\n時限: 三週（主要在講堂上 => 共6小時）\n演示: 第10週\n主題: 生命教育 / 珍惜生命 / 其他，請選擇其中一個主題\n每人至少完成2頁內容\n（2人組 => 4頁，3人組 => 6頁）\nPWA必須有index.html作為首頁，其他頁面則包含其餘內容。\n設計網頁時，需考慮大多數使用者使用iphone、android phone和ipad。\n學生應在同一個版本庫上工作，而不是每個學生都有自己的版本庫。\n學生在編寫程式前應該先規劃網站的結構、主題、頁面、功能和風格。\n移動響應式不是必須的，但最好具備以提高使用者體驗和使用者介面的品質。\n每個小組應在 Vercel 上部署 PWA，以供公眾訪問。\n小組需要確保部署的 PWA 如預期運行正常 (有效的連結、可運行的功能、沒有無效的圖片 和 href 等)。\n導師/助教可以協助將應用程式/網頁部署到 Google Play 商店。","概述要學習的技能#概述要學習的技能":"","pwa-技能#PWA 技能":"HTML5, CSS, Javascript","部署管理技能#部署/管理技能":"Github / Guthub Desktop (管理)\nVercel (部署)","軟實力#軟實力":"溝通 & 團隊合作\n批判性思考 & 邏輯思考","評分列表#評分列表":"由導師和 TA 團隊評分\n總分 100 分 + 10% 獎勵分數 (最高 100 分)\n內容 (25%)\n創意 / 設計 (25%)\n團隊合作和溝通 (25%)\n技術技能 (15%)\n演示 - Presentations (10%)\n獎勵分數 (10% 獎勵, 最高 10%)","1-內容-25#1. 內容 (25%)":"優秀的想法和主題 (10% - 0%)\n與內容相關的有趣 / 互動性強的內容 (15% - 0%)","2-創意--設計-25#2. 創意 / 設計 (25%)":"優秀的 UI 佈局 / 創意 (10% - 0%)\n優秀的 UX 設計 (10% - 0%)\n正確使用圖片 / 視頻 / gif / 圖示 (5% - 0%)","3-團隊合作和溝通-25#3. 團隊合作和溝通 (25%)":"每人至少完成 2 頁 (5%)\n整個團隊完成項目 (10% - 0%)\n優秀的團隊氛圍 (10% - 0%)","4-技術技能-15#4. 技術技能 (15%)":"在項目中使用 Github and Github desktop / git (5% / 0%)\n在項目中使用 Vercel 部署項目 (5% / 0%)\n在項目中使用 javascript / html / CSS (5% / 0%)","5-演示---presentations-10#5. 演示 - Presentations (10%)":"所有團隊成員展示相關頁面 (5%)\n優秀的演示表現 (5% - 0%)","6-獎勵-10-獎勵最高-10#6. 獎勵 (10% 獎勵，最高 10%)":"在項目中使用講義未涵蓋的技術 (例如 AOC、animate.css、sweetAlert2...) (0 - 10%)\n在項目中採用其他框架 (0 - 10%)","成品演示#成品演示":"有關更多信息，請參見 project/demo-project/README.md。","結束#結束":""}},"/lifeIsPossible/Lecture/lecture-07/lecture-07-chinese":{"title":"講課 7 - Project Week 1 | Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture 07 - 項目週 1","項目細節規劃#項目細節規劃：":"以下是一些規劃建議：\n先決定 項目主題\n再考慮所需的 功能（我們的PWA需要什麼）\n想想 風格 和 主題\n確定我們需要哪些 頁面 以及由誰來負責\n開設一個 Github 儲存庫並邀請所有團隊成員。\n先創建這些空白的 頁面 / 文件夾 / 檔案 並進行 git push。\n其他團隊成員 git pull 檔案並開始工作。\"","展示#展示":"","展示-1#展示":"每組都會在 vercel 上部署 PWA，其他人可以訪問該網站。在最後一堂課上，我們將有一個演示環節。每組將有 4-8 分鐘的時間向其他人展示 PWA。","展示---演示內容#展示 - 演示內容":"成員：建議所有成員都應該參加演示\n時間：4-8 分鐘\n內容：PWA 的功能，其他人可以在 PWA 上做什麼...\n其他：不一定需要使用 PPT"}},"/lifeIsPossible/Lecture/lecture-06/lecture-06":{"title":"Lecture 6 - Adv topic - Github, Deployment and Planning | Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture 06 - Adv topic - Github, Deployment and Planning","menu#Menu":"Github and Github Desktop\nDeployment with vercel\nPlanning and structure a website\nGrouping and discussions","github-and-github-desktop#Github and Github Desktop":"https://github.com/","what-is-github#What is Github?":"GitHub is an online software development platform. It's used for storing, tracking, and collaborating on software projects.","what-is-github-1#What is Github?":"Majority of programmers and IT firm use it\nFor collaborating and code version control\nYou can assume Github is the programmer version Google Drive\nAll codes will be upload to github with git","lab-01---create-github-account#Lab 01 - Create Github account":"https://github.com/signup?ref_cta=Sign+up&ref_loc=header+logged+out&ref_page=%2F&source=header-homeFollowing the link to register a account first. If you do not have a email, register a gmail now.","whats-inside-github-page#What's inside Github page?":"","repositories#Repositories":"Each project is named repository (AKA repo)\nWe will create a repository and upload all project codes in the repository","lab-02---create-a-new-private-repository#Lab 02 - Create a new Private repository":"Follow the steps to create a repository:You should start on the Github home pages and click the top right plus + icons, select New repository","lab-02---step-1#Lab 02 - Step 1":"Name the repo to <your_name>-project-website and select Private","lab-02---step-2#Lab 02 - Step 2":"Scroll down and un-tick the Add a README file, then click Create a repository","lab-02---step-3#Lab 02 - Step 3":"If you are done, you will see the regarding screen.","lab-03---download-the-github-desktop#Lab 03 - Download the Github desktop":"https://desktop.github.com/","lab-03---step-1#Lab 03 - Step 1":"You will see the regarding screen, click the Download for XXXX button to process the download.","lab-03---step-2#Lab 03 - Step 2":"After downloaded, click Sign in with Github.com to login","lab-03---step-3#Lab 03 - Step 3":"Upon a success login, you may see the regarding screen (without the content)","what--why-is-github-desktop#What / Why is Github desktop?":"💻 A GUI base git software\n📡 Easy git management GUI to learn\n🧰 Free and powerful\nIn early stages, we will use the Github desktop to push, clone , pull, merge the project.\nAfter you have fimilar with Github desktop, you may learn git in the future if you are interested in coding.","lab-04---use-github-desktop-to-push-the-code#Lab 04 - Use Github desktop to push the code.":"If you not not done the lab 01-03 yet, please finish those lab first.We will process the following things in this lab:\nClone the code\nAdjust code in local PC\nPush the code to github","lab-04---step-1#Lab 04 - Step 1":"Back to this screen, you may see a button of Set up in Desktop in middle left of the screen. Click it.","lab-04---step-2#Lab 04 - Step 2":"This screen will pop up after you clicked. Select a proper Local path and click the Blue Clone button.","lab-04---step-3#Lab 04 - Step 3":"You will be in this screen after the Clone. Check if the top left section is your repo name or not.","lab-04---step-4#Lab 04 - Step 4":"Right click the top left section and select Open in Visual Stuidio Code to enter the vsc.","lab-04---step-5#Lab 04 - Step 5":"Create a index.html and apple.html in the folder first.","lab-04---step-6#Lab 04 - Step 6":"Copy these content to index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>index</title>\n</head>\n<body>\n    <h1>Hello world</h1>\n    <a href=\"/apple.html\"> Go to apple </a>\n</body>\n</html>","lab-04---step-7#Lab 04 - Step 7":"Copy these content to apple.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>apple</title>\n</head>\n<body>\n    <h1>Hello apple</h1>\n    <a href=\"/index.html\"> Go to index </a>\n</body>\n</html>","lab-04---step-8#Lab 04 - Step 8":"Back to github desktop, select both index.html and apple.html\ntype something in Summary (required) input box.\nAfter typing, click Commit to main","lab-04---step-9#Lab 04 - Step 9":"You can click the Published branch button now. Click and wait for upload.","lab-04---step-10-done#Lab 04 - Step 10 Done":"If you refresh the pages from the github website and see both index.html and apple.html, means you are success.","lab-04-what-have-we-done#Lab 04 what have we done?":"Set up in Desktop => git clone\nClone a project means download a project\nType in Summary (required) + Commit to main => git commit\nCommit means having changes to the code base\nClick Published branch => git push\nPush mean add those changes to the branch","break#Break":"","deploy-the-website-to-the-world#Deploy the website to the world":"","how-can-we-access-to-the-internet-and-see-website#How can we access to the internet and see website?":"🖥 Computer?\n🖨 IoT devices?\n📱 Phones?\n📟 Devices?\n💻 Server?","-server#💻 Server":"We need a server for users to get our website / content.Server will help us to serve the target user regarding their desire data.","how-can-we-obtain-a-server#How can we obtain a server":"","self-hosting-#Self hosting ?":"","cloud-hosting-saas-#Cloud hosting (SaaS) ?":"","software-as-a-service-saas#Software as a Service (SaaS)":"Is a software licensing and delivery model in which software is licensed on a subscription basis and is centrally hosted. SaaS is also known as \"on-demand software\" and Web-based/Web-hosted software\nExamples: AWS, Azure, GCP, Digital ocean, vercel and more...","web-hosting-with-vercel#Web hosting with vercel":"A web hosting service is a type of Internet hosting service that hosts websites for clients, i.e. it offers the facilities required for them to create and maintain a site and makes it accessible on the World Wide Web. Companies providing web hosting services are sometimes called web hosts.\nAKA You can rent a server from cloud provider company.","lab-05---deploy-our-github-repo-to-vercel#Lab 05 - Deploy our Github repo to vercel":"Vercel is the platform for frontend developers, providing the speed and reliability innovators need to create at the moment of inspiration.\nIn this lab, we will deploy the lab 04 Github repo to vercel. (Free)","lab-05---step-1#Lab 05 - Step 1":"Open https://vercel.com/ and click sign up. In that pages, click Continus with GitHub and process the register.","lab-05---step-2#Lab 05 - Step 2":"If you cna see this page, click top right Add New.. and select Project.","lab-05---step-3#Lab 05 - Step 3":"Select your repo to click import.\nNotices: If you have not grant access to github in vercel, grant the access first.","lab-05---step-4#Lab 05 - Step 4":"In this page, just click Deploy and wait for the deployment happens.","lab-05---step-5#Lab 05 - Step 5":"Congratulations, you are success to deploy the website to the world!\nClick Continus to Dashboard and obtain the DOMAINS url.","lab-05---step-6#Lab 05 - Step 6":"A random DOMAINS will be assign to you. And this is the url that your website belongs to. You can share the link to others. Try to click it and share the link to others.","lab-05---step-7#Lab 05 - Step 7":"Back to your VSC with your project.\nNow, try to add more code to our index.htmlAdd whatever you like, even open a new page is ok","lab-05---step-8#Lab 05 - Step 8":"Open a folder call images and add a image to it.In  apple.html, add a <img> tag inside <body> and references the imagesapple.html samples\n<img src=\"/images/hero.png\" alt=\"a nice image\">","lab-05---step-8-cont#Lab 05 - Step 8 (Cont)":"samples","lab-05---step-9#Lab 05 - Step 9":"Back to Github Desktop, do the same things as Lab 04 - Step 8\nType commit message in bottom left\nClick Commit to main\nClick Push origin in middle top","lab-05---step-9-cont#Lab 05 - Step 9 (Cont)":"","lab-05---step-10-done#Lab 05 - Step 10 Done":"Back to the vercel and open the project, you will see the website is updated.","lab-05-focus-vercal-and-github-repo#Lab 05 Focus: Vercal and Github repo":"Whenever a push occur, vercel will know that your project is updated and re-deploy with the latest version.✨ In dept, vercel will apply the auto CI / CD with Github Actions for the deployment.","break-1#Break?":"","last-but-not-least---grouping-and-planning#Last but not least - Grouping and planning":"","project#Project":"2 to 4 student will be in a group, and the following 3 weeks will be the project period. A PWA will be developed and deploy to Vercel for publics to access.","project-details#Project details:":"Group members: 2 to 4 student Free grouping\nPeriod: 3 weeks (Mostly in lecture time)\nPresent: Week 10\nTopics: 生命教育 / 珍惜生命 / 其他 Choose one","project-details-1#Project details:":"Each person should done at least 2 pages\n(2 ppl group = > 4 pages)\n(3 ppl group = > 6 pages)\nThe PWA must have a index.html for home pages and others pages for the remaining content.\nFor the PWA, you should design the web that assume most users are using iphone , android phone and ipad.\nStudent should work on the same repository instead of each student have their own repository.\nStudent should plan the website structure, theme, page, features and style before codings.\nMobile responsive is not a must but better have it for the sake of user experiences and UI.\nEach group should be deploy the PWA in vercel\nGropus should ensure the deployed PWA works as expected (Valid links, workable functions, no dead images and href ect...)","overview-skills-to-use#Overview skills to use":"","pwa-skills#PWA skills":"HTML5\nCSS\nJavascript","deployment--management-skills#Deployment / management skills":"Github / Guthub Desktop (Management)\nVercel (Deployment)","project-details-planning#Project details Planning:":"Here are some tips for your planning:\nDetermine the Project topic first\nThen think about the features (what we need in our PWA)\nConsider the style and theme\nDetermine what pages to have and WHO work on it\nOpen a Github repository and invite all groupmates.\nOpen those blank pages / folder / file first and have a git push.\nOther groupmates git pull the file and start working.","project-group#Project Group":"Submit your group List to: TBD\nEach group are require to submit it by one person only.","end#End":""}},"/lifeIsPossible/Lecture/lecture-07/lecture-07":{"title":"Lecture 7 - Project Week 1 | Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture 07 - Project Week 1","project-details-planning#Project details Planning:":"Here are some tips for your planning:\nDetermine the Project topic first\nThen think about the features (what we need in our PWA)\nThink about the style and theme\nDetermine what pages we need to have and WHO work on it\nOpen a Gituhb repository and invite all groupmates.\nOpen those blank pages / folder / file first and have a git push.\nOther groupmates git pull the file and start working.","showcase#Showcase":"","showcase-1#Showcase":"Each group will deploy the PWA in vercel and others can be able to access the site.We will have a presentations section at the last lecture.Each group will have a 4-8 minutes time to present the PWA to others.","showcase---presentations#Showcase - presentations":"Members: Suggested all members should attend the presentations\nTime: 4-8 minutes\nContent: Features of the PWA, what can others to do on the PWA ...\nOthers: PPT is not a must"}},"/lifeIsPossible/Lecture/lecture-08/lecture-08":{"title":"Lecture 8 - Project Week 2 | Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture 08 - Project Week 2","project-day#Project day":"Please keep working on your projects.","enjoy#Enjoy":""}},"/lifeIsPossible/Lecture/lecture-09/lecture-09":{"title":"Lecture 9 - Project Week 3 | Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture 09 - Project Week 3","bonus-menu-20-mins-short-talk#Bonus Menu (20 mins short talk)":"AOS - Animate on scroll library\nAnimate.css\nsweetalert2","aos---animate-on-scroll-library#AOS - Animate on scroll library":"https://michalsnik.github.io/aos/\nAnimate On Scroll Library, helps to add scroll in animations in html","install#Install":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>Document</title>\n    <!-- Add AOS CSS here -->\n    <link href=\"https://unpkg.com/aos@2.3.1/dist/aos.css\" rel=\"stylesheet\">\n</head>\n<body>\n    <div data-aos=\"fade-up\">Hello mate</div>\n    <!-- Add AOS js AND init here -->\n    <script src=\"https://unpkg.com/aos@2.3.1/dist/aos.js\"></script>\n    <script>\n        AOS.init();\n    </script>\n</body>\n</html>","usage#Usage":"In brief, choose the effect that you want in the animations, then add the data-aos=\"????\" in regarding DOM elements.\n<div data-aos=\"fade-left\"></div>\n<div data-aos=\"flip-left\"></div>\n<div data-aos=\"zoom-in\"></div>\nSee https://michalsnik.github.io/aos/ for more references.","animatecss#Animate.css":"https://animate.style/\nAnimate.css is a library of ready-to-use, cross-browser animations for use in your web projects. Great for emphasis, home pages, sliders, and attention-guiding hints.","install-1#Install":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>Document</title>\n    <!-- Add Animate.css here -->\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\"\n    />\n</head>\n<body>\n  <div \n    class=\"animate__animated animate__bounce animate__infinite\"\n  >\n  Hello mate\n  </div>\n</body>\n</html>","usage-1#Usage":"Select the animate you like in the https://animate.style/\nThen add the string in the regarding DOM elements.e.g. If I choose animate__flash\n<h4 \n  class=\"animate__animated animate__flash animate__infinite\"\n>\nHello mate\n</h4>\nanimate__animated : Must be added to the class if you want it to animated\nanimate__infinite : Will loop the animations if added.","sweetalert2#sweetalert2":"https://sweetalert2.github.io/\nA beautiful, responsive, customizable, accessible (WAI-ARIA) replacement for JavaScript's popup boxes","install-2#Install":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>Document</title>\n</head>\n<body>\n  <!-- Add sweetalert2@11 js here -->\n  <script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\n</body>\n</html>","usage-2#Usage":"sweetalert2 is a javascript driven library, when you call the regarding functions, it will pop up a alert box.\n<script>\n  Swal.fire('Hello all')\n</script>","more-usage#More Usage":"You can combo the html and js to control when the alter box pop up.\n<button id=\"alterBtn\"> Click me </button>\n<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\n<script>\n  const alterBtn = document.getElementById(\"alterBtn\")\n  alterBtn.addEventListener(\"click\", () => {\n      Swal.fire(\"Hello all\")\n  })\n</script>","enjoy#Enjoy":""}},"/lifeIsPossible/Lecture/lecture-10/lecture-10":{"title":"Lecture 10 - Showcase | Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture 10 - Showcase","scoring-list#Scoring list":"Total 100 + 10 Bonus (Max 100)\nContent (25%)\nGreat ideas and topics (10% - 0%)\nInteresting / Interactive with regarding content (15% - 0%)\nCreative / Design (25%)\nGreat UI layout / Creative ideas (10% - 0%)\nGreat UX design (10% - 0%)\nWith proper images / video / gif / icon usgae (5% - 0%)\nTeam-work & communications (25%)\nEach person should done at least 2 pages (5%)\nThe whole group finished the project as a single website (10% - 0%)\nGreat team atmosphere (10% - 0%)\nTech Skills (15%)\nUsing Github and Github desktop / git in the project (5% / 0%)\nUsing Vercel to deploy the project (5% / 0%)\nUsing all javascript / html / CSS in the project (5% / 0%)\nPresentations (10%)\nAll teammate present the regarding pages (5%)\nGreat presentations performances (5% - 0%)\nBonus (10% Bonus, Max 10%)\nUsing tech that did not cover in the lecture (e.g AOC, animate.css, sweet alert2 ...) (0 - 10 %)\nAdapt other framework in the project (0 - 10 %)","various-type-of-coding-related-languages#Various type of Coding related languages":"","-software-engineers#💻 Software Engineers":"Java / C# / Rust / Kotlin\nTypescript / JavaScript <- Here\nPHP / HTML / CSS","-devops-related#🔌 DevOps related":"JSON / YMAL\nPython\nJavaScript / Typescript","-data--ai#📑 Data / AI":"Python\nR\nExcel","-security#🛡 Security":"Linux operactions\nPHP / JS / Python ...\nMore audit tools ...","computer-related-jobs#Computer related jobs":"","-software-engineers-1#💻 Software Engineers":"Mobile Apps developers <- Here\nFrontend developers <- Here\nBackend developers","-devops#🔌 DevOps":"DevOps Engineer\nCloud Engineer\nArchitecture Engineer","-data--ai-1#📑 Data / AI":"Deep learning Engineer\nMachine learning Engineer\nData researchers","-security-1#🛡 Security":"Information Security Engineer\nWhite hacker\nRisk Manager","frontend--mobile-apps-developers#Frontend / Mobile Apps developers?":"https://roadmap.sh/frontend/\nhttps://www.freecodecamp.org/\nand more...","good-luck-in-your-future-#Good luck in your future !":""}},"/lifeIsPossible/Lecture/lecture-ex1/lecture-ex1":{"title":"Lecture ex1 - Advance JS | Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture ex1 - Advance JS","menu#Menu":"Object, Array, for loop\nArray Looping (for, while)\nScope\nBasic Dom control in web js","in-previous-lessons#In previous lessons":"Data Types (string, number, boolean ...)\nArithmetic Operators (+, -, * ...)\nAssignment Operators(x = y, x += y ...)\nDefine variables (let, const)\nConditional Statements (==, !=, === ...)\nCompare Statements (if, else, else if)","array#Array":"The Array object, as with arrays in other programming languages, enables storing a collection of multiple items under a single variable name, and has members for performing common array operations.\nAKA a data type that store a lot of items in the same variables (as a big box).","why-array#Why Array":"Assume you have a series of data to store\n1,4,67,54,32,75\nAnd without array, you would store the values like this:\nlet numberOne = 1;\nlet numberTwo = 4;\nlet numberThree = 67\nlet numberFour = 54\n// Bad method ...\nInstead of create a series of variables,\nwe would store those data in a single boxes (array)\n// Good method to store the series data\nlet numberArray = [1, 4, 67, 54, 32, 75];\nWe can easily sum up those data with array method.\n// Bad method to sum\nlet numberOne = 1;\nlet numberTwo = 4;\nlet numberThree = 67;\nlet numberFour = 54;\nlet sum = numberOne + numberTwo + numberThree + numberFour;\n// Good method to sum\nlet numberArray = [1, 4, 67, 54];\nlet sum = 0;\nfor(let val of numberArray){\n  sum += val\n}\nWe can adjust the array in code instead of declare a new variable.\nlet numberArray = [1, 4, 67, 54];\nnumberArray.push(100); // Add 100 to the numberArray\nconsole.log(numberArray) // 1, 4, 67, 54, 100\nlet numberArray = [1, 4, 67, 54];\nnumberArray.pop(); // Remove the last item in numberArray\nconsole.log(numberArray) // 1, 4, 67","array-rules-one#Array Rules One":"In general, array can be store various item with same type\nconst numberArr = [1, 2, 56, 7]\nconst stringArr = [\"tom\", \"may\", \"peter\"]\nconst booleanArr = [false, false, true, true, true]\nIn js, you can mix up those type to store in the array (Not recommended)\nconst mixedArray = [1, \"tom\", true, 3249]","array-rules-two#Array Rules Two":"To access the array, we can do like this:\n//                     0      1       2       3        4\nconst stringArray = [\"tom\", \"may\", \"peter\", \"alex\", \"reemo\"]\nconsole.log(stringArray[0]) // \"tom\"\nconsole.log(stringArray[3]) // \"alex\"\nImportant: In general programming languages, the index of the array start with 0, means the stringArray array, tom is in stringArray[0].","array-rules-three#Array Rules Three":"To change the array content, we can do like this:\n//                     0      1       2       3        4\nconst stringArray = [\"tom\", \"may\", \"peter\", \"alex\", \"reemo\"]\nstringArray[0] = \"gordon\" // change the \"tom\" to \"gordon\"\nstringArray[3] = \"joe\" // change the \"alex\" to \"joe\"\nconsole.log(stringArray) // [\"gordon\", \"may\", \"peter\", \"joe\", \"reemo\"]","array-rules-four#Array Rules Four":"Array can store another array too. (2D array)\nconst arr = [\n  [1,2], // 0\n  [3,5], // 1\n  [32,4], // 2\n]\nconsole.log(arr[0][1]) // 2\nconsole.log(arr[1][1]) // 5\nconsole.log(arr[2][0]) // 32","common-array-method#Common Array method":"","length#length":"Get the array length (Count how many items are in the array)\n//                     0      1       2       3        4\nconst stringArray = [\"tom\", \"may\", \"peter\", \"alex\", \"reemo\"]\nconsole.log(stringArray.length) // 5","push#push":"push() add the new item to the front of the array\n//                     0      1       2       3        4\nconst stringArray = [\"tom\", \"may\", \"peter\", \"alex\", \"reemo\"]\nstringArray.push(\"dennis\")\nconsole.log(stringArray) // [\"tom\", \"may\", \"peter\", \"alex\", \"reemo\", \"dennis\"]","pop#pop":"pop() remove one front in the array\n//                     0      1       2       3        4\nconst stringArray = [\"tom\", \"may\", \"peter\", \"alex\", \"reemo\"]\nstringArray.pop()\nconsole.log(stringArray) // [\"tom\", \"may\", \"peter\", \"alex\"]","what-is-loops#What is Loops?":"Loops can execute a block of code a number of times.\nAssume we want to sum up the array\nlet numberArray = [1, 2, 8, 9, 67];\nlet sum = numberArray[0] + numberArray[1] + numberArray[2] + numberArray[3] + numberArray[4]\nThat's a bad pratice if the array have a lot of items. Let say 1000. Would you code those item 1000 times?Instead of repeting, we would use loops to go through the array like this:\nlet numberArray = [1, 2, 8, 9, 67];\nlet sum = 0;\nfor(let i = 0; i < numberArray.length; i ++){\n    sum += numberArray[i]\n}\nconsole.log(sum) // 87 \nThe for loop will loops through the numberArray, and get each items in the array.","these-two-code-are-the-same#These two code are the same":"let numberArray = [1, 2, 8, 9, 67];\nlet sum = 0;\nfor(let i = 0; i < numberArray.length; i ++){\n    sum += numberArray[i]\n}\nconsole.log(sum) // 87 \nlet numberArray = [1, 2, 8, 9, 67];\nlet sum = 0;\nsum += numberArray[0]\nsum += numberArray[1]\nsum += numberArray[2]\nsum += numberArray[3]\nsum += numberArray[4]\nconsole.log(sum) // 87","different-kinds-of-loops#Different Kinds of Loops":"JavaScript supports different kinds of loops:\nfor - loops through a block of code a number of times\nfor/of - loops through the values of an iterable object\nfor/in - loops through the properties of an object\nwhile - loops through a block of code while a specified condition is true\ndo/while - also loops through a block of code while a specified condition is true","for-loop#For Loop":"The for statement creates a loop with 3 optional expressions:\nfor (expression 1; expression 2; expression 3) {\n  // code block to be executed\n}\nExpression 1 is executed (one time) before the execution of the code block.\nExpression 2 defines the condition for executing the code block.\nExpression 3 is executed (every time) after the code block has been executed.","for-loop-with-index#For loop with index":"for (let i = 0; i < 5; i++) {\n  console.log(i)\n}\nExpression 1 : let i = 0 (Initial values) Init a variable call i\nExpression 2 : i < 5 (Conditions) The loops will continus if this conditions is true\nExpression 3 : i++ (After a loop occur)","for-loop-with-index-1#For loop with index":"for (let i = 0; i < 5; i++) {\n  console.log(i)\n}\n// 0\n// 1\n// 2\n// 3\n// 4","for-loop-with-index-array#For loop with index (array)":"let arr = [1,2,3,4,5,6,7]\nfor (let i = 0; i < arr.length; i++) {\n  console.log(\"Hello: \" + arr[i]);\n}\nExpression 1 : let i = 0 (Initial values)\nExpression 2 : i < arr.length (Conditions)\nExpression 3 : i++ (After a loop occur)","for-loop-with-index-array-1#For loop with index (array)":"let arr = [1, 2, 66, 4, 5, 77]\nfor (let i = 0; i < arr.length; i++) {\n  console.log(\"Hello: \" + arr[i]);\n}\n// \"Hello: 1\"  => arr[0] = 1\n// \"Hello: 2\"  => arr[1] = 2\n// \"Hello: 66\" => arr[2] = 66\n// \"Hello: 4\"  => arr[3] = 4\n// \"Hello: 5\"  => arr[4] = 5\n// \"Hello: 77\" => arr[5] = 77","javascript-forof#Javascript for/of":"In javascript, instead of using index, we can use for of loop to loop through elements directly.\nlet arr = [1, 2, 66, 4]\nfor (let val of arr) {\n  console.log(val);\n}\n// 1\n// 2\n// 66\n// 4","javascript-forof-1#Javascript for/of":"of loop can loop the array without the index\nlet nameArr = [\"hello\", \"yolo\", \"tom\"]\nfor (let v of nameArr) {\n  console.log(v);\n}\n// \"hello\"\n// \"yolo\"\n// \"tom\"","javascript-forin#Javascript for/in":"in loop will have you to loop the array with the index, but do not need to init the index variables\nlet nameArr = [\"hello\", \"yolo\", \"tom\"]\nfor (let ind in nameArr) {\n  console.log(ind);\n}\n// 0\n// 1\n// 2","javascript-forin-1#Javascript for/in":"in loop can get the array element with arr[i] also, but we do NOT recommended to use for in to loop the array in general situations.\nlet nameArr = [\"hello\", \"yolo\", \"tom\"]\nfor (let ind in nameArr) {\n  console.log(nameArr[ind]);\n}\n// \"hello\"\n// \"yolo\"\n// \"tom\"\nThe in loop are powerful in looping the object that we will cover in pages later.","javascript-while#Javascript while":"while loop is a loop logics which mainly use on looping thats We do not know how many times will the looping occur. Means in most of the time, we will use for/of / for/in or index for to loop a array.\nwhile(<conditions>){\n  // do stuff\n}\nwhile(true){\n  console.log(\"Hello\")\n}","while-loop-a-array#while loop a array":"let nameArr = [\"hello\", \"yolo\", \"tom\"]\nlet i = 0;\nwhile(i < nameArr.length){\n  console.log(nameArr[i])\n  i++;\n}","javascript-do-while#Javascript do while":"It is same as the while logics, but it will runs the inside code ONCE no matter the while loops is true or false at first.\ndo{\n  // do something\n} while(<conditions>)\ndo{\n  // do something\n} while(true)","javascript-do-while-1#Javascript do while":"while Samples\nwhile(false){\n  console.log(\"Hello\")\n}\n//\nHello will NOT printeddo while Samples\ndo{\n  console.log(\"Hello\")\n} while(false)\n// Hello\nHello will print once even the while(false)","continue-and-break#continue and break":"In both for and while loop, if we want to skip a certain conditions or break the loop, we may use continue and break to achieve the situations.\nwhile(true){\n  break;\n}\nwhile(true){\n  continue;\n}\nfor(let i = 0; i < 6; i ++){\n  continue;\n}","continue#continue":"when a continue occur, it will skip the current loop block.\nfor(let i = 0; i < 6; i ++){\n  if(i % 2 === 0){\n    continue; // skip the current loop\n  }\n  console.log(i)\n}\n// 1\n// 3\n// 5","break#break":"when a break occur, it will skip WHOLE loop block.\nfor(let i = 0; i < 6; i ++){\n  if(i === 3){\n    break; // escape the current loop\n  }\n  console.log(i)\n}\n// 0\n// 1\n// 2","object#Object":"The Object type represents one of JavaScript's data types. It is used to store various keyed collections and more complex entities.\nAKA we want to pack some variables together as a objects.Assume we have a person data\nlet names = \"tom\"\nlet ages = 34\nlet gender = \"F\"\nlet hobby = [\"coding\", \"running\"]\nInstead of split up those variables, we tend to create a object for this.\nlet people = {\n  names : \"tom\",\n  ages : 34,\n  gender : \"F\",\n  hobby : [\"coding\", \"running\"]\n}\nWe can access the object like this:\nlet people = {\n  names : \"tom\",\n  ages : 34,\n  gender : \"F\",\n  hobby : [\"coding\", \"running\"]\n}\n// Access the people\nconsole.log(people.name) // tom\nconsole.log(people.hobby) // [\"coding\", \"running\"]\n// Alternative method to access\nconsole.log(people[\"name\"]) // tom\nconsole.log(people[\"hobby\"]) // [\"coding\", \"running\"]\nWe tend to use object for a series of variables for functions reuse.\nlet peopleOne = {\n  names : \"tom\",\n  ages : 34,\n  gender : \"F\",\n  hobby : [\"coding\", \"running\"]\n}\nlet peopleTwo = {\n  names : \"jason\",\n  ages : 21,\n  gender : \"M\",\n  hobby : [\"swimming\", \"jumping\"]\n}\nfunction.js\nfunction printPeople(ppl){\n  console.log(\"Hello this is \" + ppl.names);\n  console.log(\"I am age of \" + ppl.ages);\n}\nprintPeople(peopleOne)\n// \"Hello this is tom\"\n// \"I am age of 34\"\nprintPeople(peopleTwo)\n// \"Hello this is jason\"\n// \"I am age of 21\"","object-array#Object array":"We can fit the object into array too\nlet objectArray = [\n  { names: \"tom\", ages: 32, gender: \"M\" },\n  { names: \"may\", ages: 23, gender: \"F\" },\n  { names: \"peter\", ages: 65, gender: \"M\" },\n]\nconsole.log(objectArray[1].name) // may","object-array-loop#Object array loop":"Loop the whole object\nlet objectArray = [\n  { names: \"tom\", ages: 32, gender: \"M\" },\n  { names: \"may\", ages: 23, gender: \"F\" },\n  { names: \"peter\", ages: 65, gender: \"M\" },\n]\nfor(let val of objectArray){\n  console.log(val)\n}\n// { names: \"tom\", ages: 32, gender: \"M\" }\n// { names: \"may\", ages: 23, gender: \"F\" }\n// { names: \"peter\", ages: 65, gender: \"M\" }","object-array-loop-1#Object array loop":"Loop the whole object, print the name only\nlet objectArray = [\n  { names: \"tom\", ages: 32, gender: \"M\" },\n  { names: \"may\", ages: 23, gender: \"F\" },\n  { names: \"peter\", ages: 65, gender: \"M\" },\n]\nfor(let val of objectArray){\n  console.log(val.name)\n}\n// \"tom\"\n// \"may\"\n// \"peter\"","object-array-loop-2#Object array loop":"Loop the whole object with index\nlet objectArray = [\n  { names: \"tom\", ages: 32, gender: \"M\" },\n  { names: \"may\", ages: 23, gender: \"F\" },\n  { names: \"peter\", ages: 65, gender: \"M\" },\n]\nfor(let i = 0; i < objectArray.lengthl i ++){\n  console.log(objectArray[i])\n}\n// { names: \"tom\", ages: 32, gender: \"M\" }\n// { names: \"may\", ages: 23, gender: \"F\" }\n// { names: \"peter\", ages: 65, gender: \"M\" }","object-loop#Object loop":"As we mentions before, we cna loop the object too by for/in\nlet peopleOne = {\n  names : \"tom\",\n  ages : 34,\n  gender : \"F\",\n  hobby : [\"coding\", \"running\"]\n}\nfor(let key in peopleOne){\n  //key, values\n  console.log(key, peopleOne[key])\n}\n// names \"tom\",\n// ages 34,\n// gender \"F\",\n// hobby [\"coding\", \"running\"]","scope#Scope":"Scope determines the accessibility (visibility) of variables.\nJavaScript has 3 types of scope:\nBlock scope\nFunction scope\nGlobal scope","block--local-scope#Block / Local Scope":"{\n  let myNumber = 2;\n  console.log(myNumber); // 2\n}\n// myNumber can NOT be used here\nconsole.log(myNumber) // Uncaught ReferenceError: myNumber is not defined\nlet myNumber = 999;\n{\n  let myNumber = 100;\n  console.log(myNumber); // 100\n}\nconsole.log(myNumber); // 999","block--local-scope-1#Block / Local Scope":"loopSamples.js\nfor(let i = 0; i < 10; i ++){\n  // some code\n}\nconsole.log(i) // Uncaught ReferenceError: i is not defined","global-scope#Global scope":"If the variable is in global, all the blobk, function and section can be access the variable.\nlet myNum = 123;\nfunction printNum(){\n  console.log(myNum); // 123\n}\nconsole.log(myNum); // 123\n{\n  console.log(myNum); // 123\n}","basic-dom-control-in-web-js#Basic Dom control in web js":"Document Object Model (DOM)\nLast, we will learn how to add interactions in web","basic-dom-control-in-web-js-1#Basic Dom control in web js":"Let's assume we have the html like thisindex.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <h3 class=\"yolo\">yolo hi</h3>\n</body>\n</html>","get-the-dom-elements#Get the DOM elements":"In general, we have these function to get the regarding elements. Both function are build in for web.\n// getElementBy\nconst msgBox = document.getElementById('msg');\nconst yoloBox = document.getElementsByClassName(\"yolo\"); // Is a array\n// querySelector\nconst msgBoxQu = document.querySelector('##msg');\nconst yoloBoxQu = document.querySelector(\".yolo\"); // Not a array\n// Since msg is a id, so we need to add ##\n// Since yolo is a class, so we need to add .\nThose function can help us to get the regarding elements.","add-interactions-to-boxes#Add interactions to boxes":"In general, we can add event to the DOM elements:\nconst msgBox = document.getElementById('msg');\n// When the msgBox box clicked, a message box will be pop up \nmsgBox.addEventListener(\"click\", function() {\n    alert(\"Hello mate\")\n});\nindex.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <h3 class=\"yolo\">yolo hi</h3>\n    <script>\n        const msgBox = document.getElementById('msg');\n        // When the msgBox box clicked, a message box will be pop up \n        msgBox.addEventListener(\"click\", function() {\n            alert(\"Hello mate\")\n        });\n    </script>\n</body>\n</html>","advance-control#Advance control":"You can control the messgae of the elements by innerHTML too.\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h3 id=\"msg\">Hello mate</h3>\n    <h3 class=\"yolo\">yolo hi</h3>\n    <script>\n        const msgBox = document.getElementById('msg');\n        const yoloBox = document.getElementsByClassName(\"yolo\");\n        // When the msgBox box clicked, a message box will be pop up \n        msgBox.addEventListener(\"click\", function() {\n            yoloBox[0].innerHTML = \"hello ar\"\n        });\n    </script>\n</body>\n</html>\ncounter.html\n<body>\n    <h3 id=\"counter\">0</h3>\n    <button id=\"addCount\">add num</button>\n    <script>\n        const counterNumber = document.getElementById('counter');\n        const addCount = document.getElementById('addCount');\n        addCount.addEventListener(\"click\", function() {\n            let originalNUmber = parseInt(counterNumber.innerHTML)\n            originalNUmber ++;\n            counterNumber.innerHTML = originalNUmber\n        });\n    </script>\n</body>","lab-01---play-around-those-stuff#Lab 01 - Play around those stuff":"Try to play around with\narray\nloop\ndocument.getElementById()\naddEventListener"}},"/lifeIsPossible/overall-chinese":{"title":"介紹 - Life is Possible - 生命教育 手機程式工作坊","data":{"":"PWA應用程式工作坊介紹https://github.com/Big-null/Life-is-Possible-Apps-workshop","-難度#🎮 難度":"簡單至中等 - 中學程度","-目標受眾#🎯 目標受眾":"基本電腦使用者\n想要了解更多關於編碼和網站開發的人。","目標#目標":"啟發對STEM相關領域有興趣的學生。\n能夠編寫簡單的網站/應用程式/PWA應用程式。\n了解編碼的運作方式和批判性思考。\n基本控制電腦的知識(Windows/MacOS或Linux)。\n對網絡技術/編碼感興趣。\n基本HTML/ICT/編碼知識是一個優勢(不是必須的)。\n能夠在編碼IDE中執行操作。\n高級程式語言的基本編碼技能。\n學習服務器部署流程。\n了解程序員/軟件工程師的概念。\n發展批判性思維和創造力。\n能夠使用 VS code 編輯器進行編碼。\n理解編碼的定義及程序員的職責。\n能夠基本使用高階語言進行編碼 (JS / HTML / CSS)。\n使用 bulma 或其他框架增強 UI / UX。\n使用 Github 和 Github Desktop 進行協作和版本控制。\n使用 Vercel 或 Netlify 部署 PWA。","語言#語言:":"學習材料為英文 / 粵語\n教學講解為粵語","學習期#學習期:":"總共 7 堂課 + 3 堂項目課 (共 10 天)\n每週六開課，共計 7 堂課，每堂課時長 2 小時 (1 小時課程 + 45 分鐘實驗 + 15 分鐘休息)\n項目課時長 3 小時，共 2 堂\n每週六 1600 - 1800每組由2至4名學生組成，並於接下來的三週進行專案開發。開發完成後，PWA應部署至Vercel以供公眾使用。\n組員: 自由分組，每組由2至4名學生組成\n時限: 三週（主要在講堂上 => 共6小時）\n演示: 第10週\n主題: 生命教育 / 珍惜生命 / 其他，請選擇其中一個主題\n每人至少完成2頁內容\n（2人組 => 4頁，3人組 => 6頁）\nPWA必須有index.html作為首頁，其他頁面則包含其餘內容。\n設計網頁時，需考慮大多數使用者使用iphone、android phone和ipad。\n學生應在同一個版本庫上工作，而不是每個學生都有自己的版本庫。\n學生在編寫程式前應該先規劃網站的結構、主題、頁面、功能和風格。\n移動響應式不是必須的，但最好具備以提高使用者體驗和使用者介面的品質。\n每個小組應在 Vercel 上部署 PWA，以供公眾訪問。\n小組需要確保部署的 PWA 如預期運行正常 (有效的連結、可運行的功能、沒有無效的圖片 和 href 等)。\n導師/助教可以協助將應用程式/網頁部署到 Google Play 商店。","pwa-技能#PWA 技能":"HTML5, CSS, Javascript","部署管理技能#部署/管理技能":"Github / Guthub Desktop (管理)\nVercel (部署)","軟實力#軟實力":"溝通 & 團隊合作\n批判性思考 & 邏輯思考\n由導師和 TA 團隊評分\n總分 100 分 + 10% 獎勵分數 (最高 100 分)\n內容 (25%)\n創意 / 設計 (25%)\n團隊合作和溝通 (25%)\n技術技能 (15%)\n演示 - Presentations (10%)\n獎勵分數 (10% 獎勵, 最高 10%)","1-內容-25#1. 內容 (25%)":"優秀的想法和主題 (10% - 0%)\n與內容相關的有趣 / 互動性強的內容 (15% - 0%)","2-創意--設計-25#2. 創意 / 設計 (25%)":"優秀的 UI 佈局 / 創意 (10% - 0%)\n優秀的 UX 設計 (10% - 0%)\n正確使用圖片 / 視頻 / gif / 圖示 (5% - 0%)","3-團隊合作和溝通-25#3. 團隊合作和溝通 (25%)":"每人至少完成 2 頁 (5%)\n整個團隊完成項目 (10% - 0%)\n優秀的團隊氛圍 (10% - 0%)","4-技術技能-15#4. 技術技能 (15%)":"在項目中使用 Github and Github desktop / git (5% / 0%)\n在項目中使用 Vercel 部署項目 (5% / 0%)\n在項目中使用 javascript / html / CSS (5% / 0%)","5-演示---presentations-10#5. 演示 - Presentations (10%)":"所有團隊成員展示相關頁面 (5%)\n優秀的演示表現 (5% - 0%)","6-獎勵-10-獎勵最高-10#6. 獎勵 (10% 獎勵，最高 10%)":"在項目中使用講義未涵蓋的技術 (例如 AOC、animate.css、sweetAlert2...) (0 - 10%)\n在項目中採用其他框架 (0 - 10%)\n我們將為前兩名小組提供一些鼓勵獎品。有關更多信息，請參見 project/demo-project/README.md。"}},"/lifeIsPossible/overall":{"title":"Intro - Life is Possible - 生命教育 手機程式工作坊","data":{"":"PWA Apps workshop introhttps://github.com/Big-null/Life-is-Possible-Apps-workshop","-level#🎮 Level":"Easy to Medium - Secondary School level","-target-audients#🎯 Target audients":"Basic computer user\nWant to understand more about coding and website development.","aims#Aims":"Enlighten students interested in STEM-related fields.\nAble to code a simple website / apps / PWA.\nUnderstand how coding works and critical thinking.\nBasic knowledge of controlling computers (Windows / MacOS or Linux)\nInterest in web technology / coding\nBasic HTML / ICT / Coding knowledge is a plus (Not a must)\nAble to perform actions in coding IDE.\nBasic coding skill in high level languages.\nLearn server deployment process.\nEdge knowledge of what is a programmer / software engineer.\nDevelop critical thinking and creativity.\nAble to use an IDE VS code to code.\nUnderstanding what is coding and what are programmers duties.\nBasic coding in high levels languages (JS / HTML / CSS).\nImport bulma and other framework to enhance the UI / UX.\nUsing Github and Github Desktop for co-op and version control.\nUsing Vercel or Netlify to deploy PWA.","languages#Languages:":"Materials in English\nTutoring / Talks in Cantonese","period#Period:":"Total 7 lectures + 3 project lectures (10 days)\nEvery Saturday week day starting from 15/04/2023 in 1400 - 1600\nLecture arrangement: 2 * 7 hours (1 hour lecture + 45 hour lab, 15 mins breaks)\nProject lectures arrangement: 2 * 3 hours team project time\nPeriod: 1400 - 1600 each saturday2 to 3 student will be in a group, and the following 3 weeks will be the project period. A PWA will be developed and deploy to Vercel for publics to access.\nGroup members: 2 to 4 student Free grouping\nPeriod: 3 weeks (Mostly in lecture time => 6 hours)\nPresentations: Week 10\nTopics: 生命教育 / 珍惜生命 / 其他 Choose one\nEach person should done at least 2 pages\n(2 ppl group = > 4 pages)\n(3 ppl group = > 6 pages)\nThe PWA must have a index.html for home pages and others pages for the remaining content.\nFor the PWA, you should design the web that assume most users are using iphone , android phone and ipad.\nStudent should work on the same repository instead of each student have their own repository.\nStudent should plan the website structure, theme, page, features and style before codings.\nMobile responsive is not a must but better have it for the sake of user experiences and UI.\nEach group should be deploy the PWA in vercel\nGropus should ensure the deployed PWA works as expected (Valid links, workable functions, no dead images and href ect...)\nTutor / TA may help for deploying apps / web to Google play store.","pwa-skills#PWA skills":"HTML5, CSS, Javascript","deployment--management-skills#Deployment / management skills":"Github / Guthub Desktop (Management)\nVercel (Deployment)","softs-skills#Softs skills":"Communications & teamwork\nCritical thinking & logical thinking\nScore by tutors and TA's\nTotal 100 + 10 Bonus (Max 100)\nContent (25%)\nCreative / Design (25%)\nTeam-work & communications (25%)\nTech Skills (15%)\nPresentations (10%)\nBonus (10% Bonus, Max 10%)","1-content-25#1. Content (25%)":"Great ideas and topics (10% - 0%)\nInteresting / Interactive with regarding content (15% - 0%)","2-creative--design-25#2. Creative / Design (25%)":"Great UI layout / Creative ideas (10% - 0%)\nGreat UX design (10% - 0%)\nWith proper images / video / gif / icon usgae (5% - 0%)","3-team-work--communications-25#3. Team-work & communications (25%)":"Each person should done at least 2 pages (5%)\nWhole group finished the project (10% - 0%)\nGreat team atmosphere (10% - 0%)","4-tech-skills-15#4. Tech Skills (15%)":"Using Github and Github desktop / git in the project (5% / 0%)\nUsing Vercel to deploy the project (5% / 0%)\nUsing all javascript / html / CSS in the project (5% / 0%)","5-presentations-10#5. Presentations (10%)":"All teammate present the regarding pages (5%)\nGreat presentations performances (5% - 0%)","6-bonus-10-bonus-max-10#6. Bonus (10% Bonus, Max 10%)":"Using tech that did not cover in the lecture (e.g AOC, animate.css, sweet alert2 ...) (0 - 10 %)\nAdapt other framework in the project (0 - 10 %)\nWe will give the top 2 groups several award for encouragement.See project/demo-project/README.md for more info."}},"/lifeIsPossible/Lecture/lecture-01/lecture-01":{"title":"Lecture 1 - Introduce to Programming | Life is Possible - 生命教育 手機程式工作坊","data":{"":"Lecture 01 - Introduce to Programming","menu#Menu":"What is coding / programmers do?\nWhy do we need to code?\nWhat should I learn for?\nInstall and setup\nLab time","what-do-coding--programmers-do#What do coding / programmers do?":"","q-what-do-coding--programmers-do#Q. What do coding / programmers do?":"Sitting in front of the computer 8 hours a day?\nTalking to the computers?\nEndless typing and typing?\nDrinking coffee all days?\nprint(\"Hello world\")?\nMore...?","a-what-do-coding--programmers-do#A. What do coding / programmers do?":"","coding-is#Coding is...":"","-thinking#🤔 Thinking":"","-coding#💻 Coding":"","-communicating#🎤 Communicating":"","-learning#📚 Learning":"","why-we-need-to-code#Why we need to code?":"","a-why-we-need-to-learn-coding#A. Why we need to learn coding?":"Interested in CS / EE related fields?\nFor jobs?\nCoding is cool!\nMy mom told me to do so!?\nFor fun?\nect...?","coding--programmers--true--false-#coding == \"programmers\" ? true : false ;":"","big-hypothesis-programmers-have-to-code#Big hypothesis: Programmers have to code":"","small-hypothesis-some-job-roles-needs-to-code-not-only-programmers#Small hypothesis: Some job roles needs to code, not only programmers":"Q.E.D?","various-type-of-coding-related-languages#Various type of Coding related languages":"","-software-engineers#💻 Software Engineers":"Java / C# / Rust / Kotlin\nJavaScript / Typescript\nPHP / HTML / CSS","-devops-related#🔌 DevOps related":"JSON / YMAL\nPython\nJavaScript / Typescript","-data--ai#📑 Data / AI":"Python\nR\nExcel","-security#🛡 Security":"Linux operations\nPHP / JS / Python ...\nMore audit tools ...","computer-related-jobs#Computer related jobs":"","-software-engineers-1#💻 Software Engineers":"Mobile Apps developers <- Here\nFrontend developers <- Here\nBackend developers","-devops#🔌 DevOps":"DevOps Engineer\nCloud Engineer\nArchitecture Engineer","-data--ai-1#📑 Data / AI":"Deep learning Engineer\nMachine learning Engineer\nData researchers","-security-1#🛡 Security":"Information Security Engineer\nWhite hacker\nRisk Manager","frontend--mobile-apps-developers#Frontend / Mobile Apps developers?":"https://roadmap.sh/frontend/\nhttps://roadmap.sh/react/\nand more...","what-we-will-learn-these-days#What we will learn these days?":"Fundamental HTML\nFundamental CSS\nFundamental Javascript\nUse of Github and Github Desktop\nVercel or Netlify to deploy","outcome#Outcome":"A Web apps (PWA) that deploy to cloud services / applications in Google Play.","fundamental-html#Fundamental HTML":"HTML is the standard markup language for Web pages\nTo learn how to write a website structure with it.","fundamental-css#Fundamental CSS":"CSS is the language we use to style an HTML document.\nTo learn how to beauty a website with it.","fundamental-javascript#Fundamental Javascript":"JavaScript is the programming language of the Web.\nTo learn how to programming in HTML documents.","use-of-github#Use of Github":"GitHub, Inc is an Internet hosting service for software development and version control using Git.\nTo learn how to use github for deploy projects.","vercel-to-deploy#Vercel to deploy":"Vercel is the platform for frontend developers, providing the speed and reliability innovators need to create at the moment of inspiration.\nTo learn how to deploy the website in the internet.","why-not-to-learn-writing-an-real-apps#Why not to learn writing an real apps?":"You can learn to write a real app with React Native javascript in the future.\n(https://reactnative.dev/)\nJavascript is multi-use and widely adapts in various fields.\nBackend with express.js, frontend with Vue / React / Svelte, AI with tensorflow.js ...\nGood to learn the fundamentals, then go to apps development if interested.","install-and-setup#Install and setup":"Installing Visual Studio Code (VSC)\nInstalling Nodejs","why-visual-studio-code-vsc#Why Visual Studio Code (VSC)?":"Free\nHuge community\nEasy to use\nPowerfull in assisting JS / HTML / CSS coding\nRelatively light weight and cross platform","vsc-download#VSC download":"https://code.visualstudio.com/","how-to-use-vsc#How to use VSC?":"Open a File\nEnter the File with code . in terminal\n(MacOS: https://code.visualstudio.com/docs/setup/mac)\n(Cmd+Shift+P => type Shell Command: Install 'code' command in PATH then enter)\nCreate a file\nCreate a folder\nDelete a folder / file\nUsing VSC terminal with pwd / cd / ls\nInstalling extensions","pwd--cd--ls-cheatsheet#pwd / cd / ls cheatsheet":"","pwd-print-work-directory#pwd (print work directory)":"pwd will print where you are at the terminal.","cd-change-directory#cd (change directory)":"cd <filename> will goto that folder e.g. cd public.\ncd .. will back to the previous folder path.","ls-list-directory#ls (list directory)":"ls will list all the file / folder in the terminal.\nls -a / ls -la will list all details in the terminal.","what-is-nodejs#What is Node.js?":"A javascript base runtime for PC\nFor running javascript on PC\nCompile javascript to machine code","nodejs-download#Node.js download":"https://nodejs.org/en/","check-if-nodejs-installed#Check if Node.js installed":"Open your (Windows: Powershell / CMD ) (MacOS: Terminal)\nType node --version then press enter.\nIf you see this message, means you are successful to install.\nPS C:\\Users\\reemo> node --version\nv18.13.0","lab-1-create-a-project#Lab 1: Create a project":"By using the vsc, create a folder call <your_name>-apps-lab1, then create a play.js file inside the folder. Also, create a folder call public, then creating two file named index.html and hello.htmlNotes 1: <your_name> means you name, if I am peter, name the folder peter-apps-lab1","lab-2-html#Lab 2: HTML":"Using VSC in index.html, copy the following text to the file\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    <h1>Hi i am peter</h1>\n</body>\n</html>\nThen rename the peter to your name. Then open the index.html.","lab-3-hello-world#Lab 3: Hello world!?":"In play.js, copy the following text to the file.\n// play.js\nconsole.log(\"Hello I am peter\")\ntype node play.js then see if these messages are printed on the terminal.\nPS D:\\apps-workshops\\lecture-01\\lab> node play.js\\\nHello I am peter\nThen rename the peter to your name, then try the node play.js again."}}}